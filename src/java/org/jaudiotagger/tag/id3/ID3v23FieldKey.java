/*
 * Decompiled with CFR 0.0.
 * 
 * Could not load the following classes:
 *  java.lang.Enum
 *  java.lang.Object
 *  java.lang.String
 *  java.lang.StringBuilder
 */
package org.jaudiotagger.tag.id3;

import org.jaudiotagger.tag.id3.Id3FieldType;
import org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey;

public final class ID3v23FieldKey
extends Enum<ID3v23FieldKey> {
    private static final /* synthetic */ ID3v23FieldKey[] $VALUES;
    public static final /* enum */ ID3v23FieldKey ACOUSTID_FINGERPRINT;
    public static final /* enum */ ID3v23FieldKey ACOUSTID_ID;
    public static final /* enum */ ID3v23FieldKey ALBUM;
    public static final /* enum */ ID3v23FieldKey ALBUM_ARTIST;
    public static final /* enum */ ID3v23FieldKey ALBUM_ARTISTS;
    public static final /* enum */ ID3v23FieldKey ALBUM_ARTISTS_SORT;
    public static final /* enum */ ID3v23FieldKey ALBUM_ARTIST_SORT;
    public static final /* enum */ ID3v23FieldKey ALBUM_SORT;
    public static final /* enum */ ID3v23FieldKey AMAZON_ID;
    public static final /* enum */ ID3v23FieldKey ARRANGER;
    public static final /* enum */ ID3v23FieldKey ARRANGER_SORT;
    public static final /* enum */ ID3v23FieldKey ARTIST;
    public static final /* enum */ ID3v23FieldKey ARTISTS;
    public static final /* enum */ ID3v23FieldKey ARTISTS_SORT;
    public static final /* enum */ ID3v23FieldKey ARTIST_SORT;
    public static final /* enum */ ID3v23FieldKey BARCODE;
    public static final /* enum */ ID3v23FieldKey BPM;
    public static final /* enum */ ID3v23FieldKey CATALOG_NO;
    public static final /* enum */ ID3v23FieldKey CHOIR;
    public static final /* enum */ ID3v23FieldKey CHOIR_SORT;
    public static final /* enum */ ID3v23FieldKey CLASSICAL_CATALOG;
    public static final /* enum */ ID3v23FieldKey CLASSICAL_NICKNAME;
    public static final /* enum */ ID3v23FieldKey COMMENT;
    public static final /* enum */ ID3v23FieldKey COMPOSER;
    public static final /* enum */ ID3v23FieldKey COMPOSER_SORT;
    public static final /* enum */ ID3v23FieldKey CONDUCTOR;
    public static final /* enum */ ID3v23FieldKey CONDUCTOR_SORT;
    public static final /* enum */ ID3v23FieldKey COPYRIGHT;
    public static final /* enum */ ID3v23FieldKey COUNTRY;
    public static final /* enum */ ID3v23FieldKey COVER_ART;
    public static final /* enum */ ID3v23FieldKey CUSTOM1;
    public static final /* enum */ ID3v23FieldKey CUSTOM2;
    public static final /* enum */ ID3v23FieldKey CUSTOM3;
    public static final /* enum */ ID3v23FieldKey CUSTOM4;
    public static final /* enum */ ID3v23FieldKey CUSTOM5;
    public static final /* enum */ ID3v23FieldKey DISC_NO;
    public static final /* enum */ ID3v23FieldKey DISC_SUBTITLE;
    public static final /* enum */ ID3v23FieldKey DISC_TOTAL;
    public static final /* enum */ ID3v23FieldKey DJMIXER;
    public static final /* enum */ ID3v23FieldKey ENCODER;
    public static final /* enum */ ID3v23FieldKey ENGINEER;
    public static final /* enum */ ID3v23FieldKey ENSEMBLE;
    public static final /* enum */ ID3v23FieldKey ENSEMBLE_SORT;
    public static final /* enum */ ID3v23FieldKey FBPM;
    public static final /* enum */ ID3v23FieldKey GENRE;
    public static final /* enum */ ID3v23FieldKey GROUP;
    public static final /* enum */ ID3v23FieldKey GROUPING;
    public static final /* enum */ ID3v23FieldKey INSTRUMENT;
    public static final /* enum */ ID3v23FieldKey INVOLVED_PERSON;
    public static final /* enum */ ID3v23FieldKey ISRC;
    public static final /* enum */ ID3v23FieldKey IS_CLASSICAL;
    public static final /* enum */ ID3v23FieldKey IS_COMPILATION;
    public static final /* enum */ ID3v23FieldKey IS_SOUNDTRACK;
    public static final /* enum */ ID3v23FieldKey ITUNES_GROUPING;
    public static final /* enum */ ID3v23FieldKey KEY;
    public static final /* enum */ ID3v23FieldKey LANGUAGE;
    public static final /* enum */ ID3v23FieldKey LYRICIST;
    public static final /* enum */ ID3v23FieldKey LYRICS;
    public static final /* enum */ ID3v23FieldKey MEDIA;
    public static final /* enum */ ID3v23FieldKey MIXER;
    public static final /* enum */ ID3v23FieldKey MOOD;
    public static final /* enum */ ID3v23FieldKey MOOD_ACOUSTIC;
    public static final /* enum */ ID3v23FieldKey MOOD_AGGRESSIVE;
    public static final /* enum */ ID3v23FieldKey MOOD_AROUSAL;
    public static final /* enum */ ID3v23FieldKey MOOD_DANCEABILITY;
    public static final /* enum */ ID3v23FieldKey MOOD_ELECTRONIC;
    public static final /* enum */ ID3v23FieldKey MOOD_HAPPY;
    public static final /* enum */ ID3v23FieldKey MOOD_INSTRUMENTAL;
    public static final /* enum */ ID3v23FieldKey MOOD_PARTY;
    public static final /* enum */ ID3v23FieldKey MOOD_RELAXED;
    public static final /* enum */ ID3v23FieldKey MOOD_SAD;
    public static final /* enum */ ID3v23FieldKey MOOD_VALENCE;
    public static final /* enum */ ID3v23FieldKey MOVEMENT;
    public static final /* enum */ ID3v23FieldKey MOVEMENT_NO;
    public static final /* enum */ ID3v23FieldKey MOVEMENT_TOTAL;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_ARTISTID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_DISC_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_ORIGINAL_RELEASEID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASEARTISTID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASEID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASE_COUNTRY;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASE_GROUP_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASE_STATUS;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASE_TRACK_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_RELEASE_TYPE;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_TRACK_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_COMPOSITION;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID;
    public static final /* enum */ ID3v23FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID;
    public static final /* enum */ ID3v23FieldKey MUSICIP_ID;
    public static final /* enum */ ID3v23FieldKey OCCASION;
    public static final /* enum */ ID3v23FieldKey OPUS;
    public static final /* enum */ ID3v23FieldKey ORCHESTRA;
    public static final /* enum */ ID3v23FieldKey ORCHESTRA_SORT;
    public static final /* enum */ ID3v23FieldKey ORIGINAL_ALBUM;
    public static final /* enum */ ID3v23FieldKey ORIGINAL_ARTIST;
    public static final /* enum */ ID3v23FieldKey ORIGINAL_LYRICIST;
    public static final /* enum */ ID3v23FieldKey ORIGINAL_YEAR;
    public static final /* enum */ ID3v23FieldKey PART;
    public static final /* enum */ ID3v23FieldKey PART_NUMBER;
    public static final /* enum */ ID3v23FieldKey PART_TYPE;
    public static final /* enum */ ID3v23FieldKey PERFORMER;
    public static final /* enum */ ID3v23FieldKey PERFORMER_NAME;
    public static final /* enum */ ID3v23FieldKey PERFORMER_NAME_SORT;
    public static final /* enum */ ID3v23FieldKey PERIOD;
    public static final /* enum */ ID3v23FieldKey PRODUCER;
    public static final /* enum */ ID3v23FieldKey QUALITY;
    public static final /* enum */ ID3v23FieldKey RANKING;
    public static final /* enum */ ID3v23FieldKey RATING;
    public static final /* enum */ ID3v23FieldKey RECORD_LABEL;
    public static final /* enum */ ID3v23FieldKey REMIXER;
    public static final /* enum */ ID3v23FieldKey SCRIPT;
    public static final /* enum */ ID3v23FieldKey SINGLE_DISC_TRACK_NO;
    public static final /* enum */ ID3v23FieldKey SUBTITLE;
    public static final /* enum */ ID3v23FieldKey TAGS;
    public static final /* enum */ ID3v23FieldKey TEMPO;
    public static final /* enum */ ID3v23FieldKey TIMBRE;
    public static final /* enum */ ID3v23FieldKey TITLE;
    public static final /* enum */ ID3v23FieldKey TITLE_MOVEMENT;
    public static final /* enum */ ID3v23FieldKey TITLE_SORT;
    public static final /* enum */ ID3v23FieldKey TONALITY;
    public static final /* enum */ ID3v23FieldKey TRACK;
    public static final /* enum */ ID3v23FieldKey TRACK_TOTAL;
    public static final /* enum */ ID3v23FieldKey URL_DISCOGS_ARTIST_SITE;
    public static final /* enum */ ID3v23FieldKey URL_DISCOGS_RELEASE_SITE;
    public static final /* enum */ ID3v23FieldKey URL_LYRICS_SITE;
    public static final /* enum */ ID3v23FieldKey URL_OFFICIAL_ARTIST_SITE;
    public static final /* enum */ ID3v23FieldKey URL_OFFICIAL_RELEASE_SITE;
    public static final /* enum */ ID3v23FieldKey URL_WIKIPEDIA_ARTIST_SITE;
    public static final /* enum */ ID3v23FieldKey URL_WIKIPEDIA_RELEASE_SITE;
    public static final /* enum */ ID3v23FieldKey WORK;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL1;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL1_TYPE;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL2;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL2_TYPE;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL3;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL3_TYPE;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL4;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL4_TYPE;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL5;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL5_TYPE;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL6;
    public static final /* enum */ ID3v23FieldKey WORK_PART_LEVEL6_TYPE;
    public static final /* enum */ ID3v23FieldKey WORK_TYPE;
    public static final /* enum */ ID3v23FieldKey YEAR;
    private String fieldName;
    private Id3FieldType fieldType;
    private String frameId;
    private String subId;

    static {
        ID3v23FieldKey iD3v23FieldKey;
        ID3v23FieldKey iD3v23FieldKey2;
        ID3v23FieldKey iD3v23FieldKey3;
        ID3v23FieldKey iD3v23FieldKey4;
        ID3v23FieldKey iD3v23FieldKey5;
        ID3v23FieldKey iD3v23FieldKey6;
        ID3v23FieldKey iD3v23FieldKey7;
        ID3v23FieldKey iD3v23FieldKey8;
        ID3v23FieldKey iD3v23FieldKey9;
        ID3v23FieldKey iD3v23FieldKey10;
        ID3v23FieldKey iD3v23FieldKey11;
        ID3v23FieldKey iD3v23FieldKey12;
        ID3v23FieldKey iD3v23FieldKey13;
        ID3v23FieldKey iD3v23FieldKey14;
        ID3v23FieldKey iD3v23FieldKey15;
        ID3v23FieldKey iD3v23FieldKey16;
        ID3v23FieldKey iD3v23FieldKey17;
        ID3v23FieldKey iD3v23FieldKey18;
        ID3v23FieldKey iD3v23FieldKey19;
        ID3v23FieldKey iD3v23FieldKey20;
        ID3v23FieldKey iD3v23FieldKey21;
        ID3v23FieldKey iD3v23FieldKey22;
        ID3v23FieldKey iD3v23FieldKey23;
        ID3v23FieldKey iD3v23FieldKey24;
        ID3v23FieldKey iD3v23FieldKey25;
        ID3v23FieldKey iD3v23FieldKey26;
        ID3v23FieldKey iD3v23FieldKey27;
        ID3v23FieldKey iD3v23FieldKey28;
        ID3v23FieldKey iD3v23FieldKey29;
        ID3v23FieldKey iD3v23FieldKey30;
        ID3v23FieldKey iD3v23FieldKey31;
        ID3v23FieldKey iD3v23FieldKey32;
        ID3v23FieldKey iD3v23FieldKey33;
        ID3v23FieldKey iD3v23FieldKey34;
        ID3v23FieldKey iD3v23FieldKey35;
        ID3v23FieldKey iD3v23FieldKey36;
        ID3v23FieldKey iD3v23FieldKey37;
        ID3v23FieldKey iD3v23FieldKey38;
        ID3v23FieldKey iD3v23FieldKey39;
        ID3v23FieldKey iD3v23FieldKey40;
        ID3v23FieldKey iD3v23FieldKey41;
        ID3v23FieldKey iD3v23FieldKey42;
        ID3v23FieldKey iD3v23FieldKey43;
        ID3v23FieldKey iD3v23FieldKey44;
        ID3v23FieldKey iD3v23FieldKey45;
        ID3v23FieldKey iD3v23FieldKey46;
        ID3v23FieldKey iD3v23FieldKey47;
        ID3v23FieldKey iD3v23FieldKey48;
        ID3v23FieldKey iD3v23FieldKey49;
        ID3v23FieldKey iD3v23FieldKey50;
        ID3v23FieldKey iD3v23FieldKey51;
        ID3v23FieldKey iD3v23FieldKey52;
        ID3v23FieldKey iD3v23FieldKey53;
        ID3v23FieldKey iD3v23FieldKey54;
        ID3v23FieldKey iD3v23FieldKey55;
        ID3v23FieldKey iD3v23FieldKey56;
        ID3v23FieldKey iD3v23FieldKey57;
        ID3v23FieldKey iD3v23FieldKey58;
        ID3v23FieldKey iD3v23FieldKey59;
        ID3v23FieldKey iD3v23FieldKey60;
        ID3v23FieldKey iD3v23FieldKey61;
        ID3v23FieldKey iD3v23FieldKey62;
        ID3v23FieldKey iD3v23FieldKey63;
        ID3v23FieldKey iD3v23FieldKey64;
        ID3v23FieldKey iD3v23FieldKey65;
        ID3v23FieldKey iD3v23FieldKey66;
        ID3v23FieldKey iD3v23FieldKey67;
        ID3v23FieldKey iD3v23FieldKey68;
        ID3v23FieldKey iD3v23FieldKey69;
        ID3v23FieldKey iD3v23FieldKey70;
        ID3v23FieldKey iD3v23FieldKey71;
        ID3v23FieldKey iD3v23FieldKey72;
        ID3v23FieldKey iD3v23FieldKey73;
        ID3v23FieldKey iD3v23FieldKey74;
        ID3v23FieldKey iD3v23FieldKey75;
        ID3v23FieldKey iD3v23FieldKey76;
        ID3v23FieldKey iD3v23FieldKey77;
        ID3v23FieldKey iD3v23FieldKey78;
        ID3v23FieldKey iD3v23FieldKey79;
        ID3v23FieldKey iD3v23FieldKey80;
        ID3v23FieldKey iD3v23FieldKey81;
        ID3v23FieldKey iD3v23FieldKey82;
        ID3v23FieldKey iD3v23FieldKey83;
        ID3v23FieldKey iD3v23FieldKey84;
        ID3v23FieldKey iD3v23FieldKey85;
        ID3v23FieldKey iD3v23FieldKey86;
        ID3v23FieldKey iD3v23FieldKey87;
        ID3v23FieldKey iD3v23FieldKey88;
        ID3v23FieldKey iD3v23FieldKey89;
        ID3v23FieldKey iD3v23FieldKey90;
        ID3v23FieldKey iD3v23FieldKey91;
        ID3v23FieldKey iD3v23FieldKey92;
        ID3v23FieldKey iD3v23FieldKey93;
        ID3v23FieldKey iD3v23FieldKey94;
        ID3v23FieldKey iD3v23FieldKey95;
        ID3v23FieldKey iD3v23FieldKey96;
        ID3v23FieldKey iD3v23FieldKey97;
        ID3v23FieldKey iD3v23FieldKey98;
        ID3v23FieldKey iD3v23FieldKey99;
        ID3v23FieldKey iD3v23FieldKey100;
        ID3v23FieldKey iD3v23FieldKey101;
        ID3v23FieldKey iD3v23FieldKey102;
        ID3v23FieldKey iD3v23FieldKey103;
        ID3v23FieldKey iD3v23FieldKey104;
        ID3v23FieldKey iD3v23FieldKey105;
        ID3v23FieldKey iD3v23FieldKey106;
        Id3FieldType id3FieldType = Id3FieldType.TEXT;
        ACOUSTID_FINGERPRINT = iD3v23FieldKey41 = new ID3v23FieldKey("TXXX", "Acoustid Fingerprint", id3FieldType);
        ACOUSTID_ID = iD3v23FieldKey50 = new ID3v23FieldKey("TXXX", "Acoustid Id", id3FieldType);
        ALBUM = new ID3v23FieldKey("TALB", id3FieldType);
        ALBUM_ARTIST = new ID3v23FieldKey("TPE2", id3FieldType);
        ALBUM_ARTIST_SORT = new ID3v23FieldKey("TSO2", id3FieldType);
        ALBUM_ARTISTS = iD3v23FieldKey20 = new ID3v23FieldKey("TXXX", "ALBUM_ARTISTS", id3FieldType);
        ALBUM_ARTISTS_SORT = iD3v23FieldKey15 = new ID3v23FieldKey("TXXX", "ALBUM_ARTISTS_SORT", id3FieldType);
        ALBUM_SORT = new ID3v23FieldKey("TSOA", id3FieldType);
        AMAZON_ID = iD3v23FieldKey52 = new ID3v23FieldKey("TXXX", "ASIN", id3FieldType);
        ARRANGER = iD3v23FieldKey105 = new ID3v23FieldKey("IPLS", StandardIPLSKey.ARRANGER.getKey(), id3FieldType);
        ARRANGER_SORT = iD3v23FieldKey91 = new ID3v23FieldKey("TXXX", "ARRANGER_SORT", id3FieldType);
        ARTIST = new ID3v23FieldKey("TPE1", id3FieldType);
        ARTISTS = iD3v23FieldKey49 = new ID3v23FieldKey("TXXX", "ARTISTS", id3FieldType);
        ARTISTS_SORT = iD3v23FieldKey22 = new ID3v23FieldKey("TXXX", "ARTISTS_SORT", id3FieldType);
        ARTIST_SORT = new ID3v23FieldKey("TSOP", id3FieldType);
        BARCODE = iD3v23FieldKey57 = new ID3v23FieldKey("TXXX", "BARCODE", id3FieldType);
        BPM = new ID3v23FieldKey("TBPM", id3FieldType);
        CATALOG_NO = iD3v23FieldKey97 = new ID3v23FieldKey("TXXX", "CATALOGNUMBER", id3FieldType);
        CHOIR = iD3v23FieldKey35 = new ID3v23FieldKey("TXXX", "CHOIR", id3FieldType);
        CHOIR_SORT = iD3v23FieldKey21 = new ID3v23FieldKey("TXXX", "CHOIR_SORT", id3FieldType);
        CLASSICAL_CATALOG = iD3v23FieldKey82 = new ID3v23FieldKey("TXXX", "CLASSICAL_CATALOG", id3FieldType);
        CLASSICAL_NICKNAME = iD3v23FieldKey40 = new ID3v23FieldKey("TXXX", "CLASSICAL_NICKNAME", id3FieldType);
        COMMENT = new ID3v23FieldKey("COMM", id3FieldType);
        COMPOSER = new ID3v23FieldKey("TCOM", id3FieldType);
        COMPOSER_SORT = new ID3v23FieldKey("TSOC", id3FieldType);
        CONDUCTOR = new ID3v23FieldKey("TPE3", id3FieldType);
        CONDUCTOR_SORT = iD3v23FieldKey55 = new ID3v23FieldKey("TXXX", "CONDUCTOR_SORT", id3FieldType);
        COPYRIGHT = new ID3v23FieldKey("TCOP", id3FieldType);
        COUNTRY = iD3v23FieldKey64 = new ID3v23FieldKey("TXXX", "Country", id3FieldType);
        COVER_ART = new ID3v23FieldKey("APIC", Id3FieldType.BINARY);
        CUSTOM1 = iD3v23FieldKey47 = new ID3v23FieldKey("COMM", "Songs-DB_Custom1", id3FieldType);
        CUSTOM2 = iD3v23FieldKey5 = new ID3v23FieldKey("COMM", "Songs-DB_Custom2", id3FieldType);
        CUSTOM3 = iD3v23FieldKey37 = new ID3v23FieldKey("COMM", "Songs-DB_Custom3", id3FieldType);
        CUSTOM4 = iD3v23FieldKey69 = new ID3v23FieldKey("COMM", "Songs-DB_Custom4", id3FieldType);
        CUSTOM5 = iD3v23FieldKey60 = new ID3v23FieldKey("COMM", "Songs-DB_Custom5", id3FieldType);
        DISC_NO = new ID3v23FieldKey("TPOS", id3FieldType);
        DISC_SUBTITLE = new ID3v23FieldKey("TSST", id3FieldType);
        DISC_TOTAL = new ID3v23FieldKey("TPOS", id3FieldType);
        DJMIXER = iD3v23FieldKey38 = new ID3v23FieldKey("IPLS", StandardIPLSKey.DJMIXER.getKey(), id3FieldType);
        ENCODER = new ID3v23FieldKey("TENC", id3FieldType);
        ENGINEER = iD3v23FieldKey79 = new ID3v23FieldKey("IPLS", StandardIPLSKey.ENGINEER.getKey(), id3FieldType);
        ENSEMBLE = iD3v23FieldKey6 = new ID3v23FieldKey("TXXX", "ENSEMBLE", id3FieldType);
        ENSEMBLE_SORT = iD3v23FieldKey43 = new ID3v23FieldKey("TXXX", "ENSEMBLE_SORT", id3FieldType);
        FBPM = iD3v23FieldKey86 = new ID3v23FieldKey("TXXX", "FBPM", id3FieldType);
        GENRE = new ID3v23FieldKey("TCON", id3FieldType);
        GROUP = iD3v23FieldKey62 = new ID3v23FieldKey("TXXX", "GROUP", id3FieldType);
        Id3FieldType id3FieldType2 = Id3FieldType.TEXT;
        GROUPING = new ID3v23FieldKey("TIT1", id3FieldType2);
        INVOLVED_PERSON = new ID3v23FieldKey("IPLS", id3FieldType2);
        INSTRUMENT = iD3v23FieldKey75 = new ID3v23FieldKey("TXXX", "INSTRUMENT", id3FieldType2);
        ISRC = new ID3v23FieldKey("TSRC", id3FieldType2);
        IS_CLASSICAL = iD3v23FieldKey44 = new ID3v23FieldKey("TXXX", "IS_CLASSICAL", id3FieldType2);
        IS_COMPILATION = new ID3v23FieldKey("TCMP", id3FieldType2);
        IS_SOUNDTRACK = iD3v23FieldKey9 = new ID3v23FieldKey("TXXX", "IS_SOUNDTRACK", id3FieldType2);
        ITUNES_GROUPING = new ID3v23FieldKey("GRP1", id3FieldType2);
        KEY = new ID3v23FieldKey("TKEY", id3FieldType2);
        LANGUAGE = new ID3v23FieldKey("TLAN", id3FieldType2);
        LYRICIST = new ID3v23FieldKey("TEXT", id3FieldType2);
        LYRICS = new ID3v23FieldKey("USLT", id3FieldType2);
        MEDIA = new ID3v23FieldKey("TMED", id3FieldType2);
        MIXER = iD3v23FieldKey78 = new ID3v23FieldKey("IPLS", StandardIPLSKey.MIXER.getKey(), id3FieldType2);
        MOOD = iD3v23FieldKey36 = new ID3v23FieldKey("TXXX", "MOOD", id3FieldType2);
        MOOD_ACOUSTIC = iD3v23FieldKey51 = new ID3v23FieldKey("TXXX", "MOOD_ACOUSTIC", id3FieldType2);
        MOOD_AGGRESSIVE = iD3v23FieldKey73 = new ID3v23FieldKey("TXXX", "MOOD_AGGRESSIVE", id3FieldType2);
        MOOD_AROUSAL = iD3v23FieldKey34 = new ID3v23FieldKey("TXXX", "MOOD_AROUSAL", id3FieldType2);
        MOOD_DANCEABILITY = iD3v23FieldKey = new ID3v23FieldKey("TXXX", "MOOD_DANCEABILITY", id3FieldType2);
        MOOD_ELECTRONIC = iD3v23FieldKey17 = new ID3v23FieldKey("TXXX", "MOOD_ELECTRONIC", id3FieldType2);
        MOOD_HAPPY = iD3v23FieldKey84 = new ID3v23FieldKey("TXXX", "MOOD_HAPPY", id3FieldType2);
        MOOD_INSTRUMENTAL = iD3v23FieldKey53 = new ID3v23FieldKey("TXXX", "MOOD_INSTRUMENTAL", id3FieldType2);
        MOOD_PARTY = iD3v23FieldKey39 = new ID3v23FieldKey("TXXX", "MOOD_PARTY", id3FieldType2);
        MOOD_RELAXED = iD3v23FieldKey81 = new ID3v23FieldKey("TXXX", "MOOD_RELAXED", id3FieldType2);
        MOOD_SAD = iD3v23FieldKey18 = new ID3v23FieldKey("TXXX", "MOOD_SAD", id3FieldType2);
        MOOD_VALENCE = iD3v23FieldKey13 = new ID3v23FieldKey("TXXX", "MOOD_VALENCE", id3FieldType2);
        MOVEMENT = new ID3v23FieldKey("MVNM", id3FieldType2);
        MOVEMENT_NO = new ID3v23FieldKey("MVIN", id3FieldType2);
        MOVEMENT_TOTAL = new ID3v23FieldKey("MVIN", id3FieldType2);
        MUSICBRAINZ_ARTISTID = iD3v23FieldKey100 = new ID3v23FieldKey("TXXX", "MusicBrainz Artist Id", id3FieldType2);
        MUSICBRAINZ_DISC_ID = iD3v23FieldKey58 = new ID3v23FieldKey("TXXX", "MusicBrainz Disc Id", id3FieldType2);
        MUSICBRAINZ_ORIGINAL_RELEASEID = iD3v23FieldKey68 = new ID3v23FieldKey("TXXX", "MusicBrainz Original Album Id", id3FieldType2);
        MUSICBRAINZ_RELEASEARTISTID = iD3v23FieldKey76 = new ID3v23FieldKey("TXXX", "MusicBrainz Album Artist Id", id3FieldType2);
        MUSICBRAINZ_RELEASEID = iD3v23FieldKey8 = new ID3v23FieldKey("TXXX", "MusicBrainz Album Id", id3FieldType2);
        MUSICBRAINZ_RELEASE_COUNTRY = iD3v23FieldKey94 = new ID3v23FieldKey("TXXX", "MusicBrainz Album Release Country", id3FieldType2);
        MUSICBRAINZ_RELEASE_GROUP_ID = iD3v23FieldKey25 = new ID3v23FieldKey("TXXX", "MusicBrainz Release Group Id", id3FieldType2);
        MUSICBRAINZ_RELEASE_STATUS = iD3v23FieldKey59 = new ID3v23FieldKey("TXXX", "MusicBrainz Album Status", id3FieldType2);
        MUSICBRAINZ_RELEASE_TRACK_ID = iD3v23FieldKey104 = new ID3v23FieldKey("TXXX", "MusicBrainz Release Track Id", id3FieldType2);
        MUSICBRAINZ_RELEASE_TYPE = iD3v23FieldKey33 = new ID3v23FieldKey("TXXX", "MusicBrainz Album Type", id3FieldType2);
        MUSICBRAINZ_TRACK_ID = iD3v23FieldKey14 = new ID3v23FieldKey("UFID", "http://musicbrainz.org", id3FieldType2);
        MUSICBRAINZ_WORK_COMPOSITION = iD3v23FieldKey4 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_COMPOSITION", id3FieldType2);
        MUSICBRAINZ_WORK_COMPOSITION_ID = iD3v23FieldKey30 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_COMPOSITION_ID", id3FieldType2);
        MUSICBRAINZ_WORK_ID = iD3v23FieldKey71 = new ID3v23FieldKey("TXXX", "MusicBrainz Work Id", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL1_ID = iD3v23FieldKey56 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL1_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL2_ID = iD3v23FieldKey28 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL2_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL3_ID = iD3v23FieldKey88 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL3_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL4_ID = iD3v23FieldKey11 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL4_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL5_ID = iD3v23FieldKey19 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL5_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL6_ID = iD3v23FieldKey83 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL6_ID", id3FieldType2);
        Id3FieldType id3FieldType3 = Id3FieldType.TEXT;
        MUSICIP_ID = iD3v23FieldKey63 = new ID3v23FieldKey("TXXX", "MusicIP PUID", id3FieldType3);
        OCCASION = iD3v23FieldKey85 = new ID3v23FieldKey("COMM", "Songs-DB_Occasion", id3FieldType3);
        OPUS = iD3v23FieldKey46 = new ID3v23FieldKey("TXXX", "OPUS", id3FieldType3);
        ORCHESTRA = iD3v23FieldKey90 = new ID3v23FieldKey("TXXX", "ORCHESTRA", id3FieldType3);
        ORCHESTRA_SORT = iD3v23FieldKey31 = new ID3v23FieldKey("TXXX", "ORCHESTRA_SORT", id3FieldType3);
        ORIGINAL_ALBUM = new ID3v23FieldKey("TOAL", id3FieldType3);
        ORIGINAL_ARTIST = new ID3v23FieldKey("TOPE", id3FieldType3);
        ORIGINAL_LYRICIST = new ID3v23FieldKey("TOLY", id3FieldType3);
        ORIGINAL_YEAR = new ID3v23FieldKey("TORY", id3FieldType3);
        PART = iD3v23FieldKey72 = new ID3v23FieldKey("TXXX", "PART", id3FieldType3);
        PART_NUMBER = iD3v23FieldKey87 = new ID3v23FieldKey("TXXX", "PARTNUMBER", id3FieldType3);
        PART_TYPE = iD3v23FieldKey27 = new ID3v23FieldKey("TXXX", "PART_TYPE", id3FieldType3);
        PERFORMER = new ID3v23FieldKey("IPLS", id3FieldType3);
        PERFORMER_NAME = iD3v23FieldKey16 = new ID3v23FieldKey("TXXX", "PERFORMER_NAME", id3FieldType3);
        PERFORMER_NAME_SORT = iD3v23FieldKey7 = new ID3v23FieldKey("TXXX", "PERFORMER_NAME_SORT", id3FieldType3);
        PERIOD = iD3v23FieldKey26 = new ID3v23FieldKey("TXXX", "PERIOD", id3FieldType3);
        PRODUCER = iD3v23FieldKey61 = new ID3v23FieldKey("IPLS", StandardIPLSKey.PRODUCER.getKey(), id3FieldType3);
        QUALITY = iD3v23FieldKey70 = new ID3v23FieldKey("COMM", "Songs-DB_Preference", id3FieldType3);
        RANKING = iD3v23FieldKey74 = new ID3v23FieldKey("TXXX", "RANKING", id3FieldType3);
        RATING = new ID3v23FieldKey("POPM", id3FieldType3);
        RECORD_LABEL = new ID3v23FieldKey("TPUB", id3FieldType3);
        REMIXER = new ID3v23FieldKey("TPE4", id3FieldType3);
        SCRIPT = iD3v23FieldKey10 = new ID3v23FieldKey("TXXX", "Script", id3FieldType3);
        SINGLE_DISC_TRACK_NO = iD3v23FieldKey42 = new ID3v23FieldKey("TXXX", "SINGLE_DISC_TRACK_NO", id3FieldType3);
        SUBTITLE = new ID3v23FieldKey("TIT3", id3FieldType3);
        TAGS = iD3v23FieldKey77 = new ID3v23FieldKey("TXXX", "TAGS", id3FieldType3);
        TEMPO = iD3v23FieldKey67 = new ID3v23FieldKey("COMM", "Songs-DB_Tempo", id3FieldType3);
        TIMBRE = iD3v23FieldKey54 = new ID3v23FieldKey("TXXX", "TIMBRE_BRIGHTNESS", id3FieldType3);
        TITLE = new ID3v23FieldKey("TIT2", id3FieldType3);
        TITLE_MOVEMENT = iD3v23FieldKey80 = new ID3v23FieldKey("TXXX", "TITLE_MOVEMENT", id3FieldType3);
        MUSICBRAINZ_WORK = iD3v23FieldKey23 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK", id3FieldType3);
        TITLE_SORT = new ID3v23FieldKey("TSOT", id3FieldType3);
        TONALITY = iD3v23FieldKey2 = new ID3v23FieldKey("TXXX", "TONALITY", id3FieldType3);
        TRACK = new ID3v23FieldKey("TRCK", id3FieldType3);
        TRACK_TOTAL = new ID3v23FieldKey("TRCK", id3FieldType3);
        URL_DISCOGS_ARTIST_SITE = iD3v23FieldKey92 = new ID3v23FieldKey("WXXX", "DISCOGS_ARTIST", id3FieldType3);
        URL_DISCOGS_RELEASE_SITE = iD3v23FieldKey45 = new ID3v23FieldKey("WXXX", "DISCOGS_RELEASE", id3FieldType3);
        URL_LYRICS_SITE = iD3v23FieldKey48 = new ID3v23FieldKey("WXXX", "LYRICS_SITE", id3FieldType3);
        URL_OFFICIAL_ARTIST_SITE = new ID3v23FieldKey("WOAR", id3FieldType3);
        URL_OFFICIAL_RELEASE_SITE = iD3v23FieldKey65 = new ID3v23FieldKey("WXXX", "OFFICIAL_RELEASE", id3FieldType3);
        URL_WIKIPEDIA_ARTIST_SITE = iD3v23FieldKey29 = new ID3v23FieldKey("WXXX", "WIKIPEDIA_ARTIST", id3FieldType3);
        URL_WIKIPEDIA_RELEASE_SITE = iD3v23FieldKey3 = new ID3v23FieldKey("WXXX", "WIKIPEDIA_RELEASE", id3FieldType3);
        WORK = iD3v23FieldKey12 = new ID3v23FieldKey("TXXX", "WORK", id3FieldType3);
        WORK_PART_LEVEL1 = iD3v23FieldKey32 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL1", id3FieldType3);
        WORK_PART_LEVEL1_TYPE = iD3v23FieldKey96 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL1_TYPE", id3FieldType3);
        WORK_PART_LEVEL2 = iD3v23FieldKey66 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL2", id3FieldType3);
        WORK_PART_LEVEL2_TYPE = iD3v23FieldKey24 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL2_TYPE", id3FieldType3);
        WORK_PART_LEVEL3 = iD3v23FieldKey93 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL3", id3FieldType3);
        WORK_PART_LEVEL3_TYPE = iD3v23FieldKey95 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL3_TYPE", id3FieldType3);
        Id3FieldType id3FieldType4 = Id3FieldType.TEXT;
        WORK_PART_LEVEL4 = iD3v23FieldKey89 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL4", id3FieldType4);
        WORK_PART_LEVEL4_TYPE = iD3v23FieldKey98 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL4_TYPE", id3FieldType4);
        WORK_PART_LEVEL5 = iD3v23FieldKey102 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL5", id3FieldType4);
        WORK_PART_LEVEL5_TYPE = iD3v23FieldKey99 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL5_TYPE", id3FieldType4);
        WORK_PART_LEVEL6 = iD3v23FieldKey106 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL6", id3FieldType4);
        WORK_PART_LEVEL6_TYPE = iD3v23FieldKey101 = new ID3v23FieldKey("TXXX", "MUSICBRAINZ_WORK_PART_LEVEL6_TYPE", id3FieldType4);
        WORK_TYPE = iD3v23FieldKey103 = new ID3v23FieldKey("TXXX", "WORK_TYPE", id3FieldType4);
        YEAR = new ID3v23FieldKey("TYER", id3FieldType4);
        ID3v23FieldKey[] arriD3v23FieldKey = new ID3v23FieldKey[]{ACOUSTID_FINGERPRINT, ACOUSTID_ID, ALBUM, ALBUM_ARTIST, ALBUM_ARTIST_SORT, ALBUM_ARTISTS, ALBUM_ARTISTS_SORT, ALBUM_SORT, AMAZON_ID, ARRANGER, ARRANGER_SORT, ARTIST, ARTISTS, ARTISTS_SORT, ARTIST_SORT, BARCODE, BPM, CATALOG_NO, CHOIR, CHOIR_SORT, CLASSICAL_CATALOG, CLASSICAL_NICKNAME, COMMENT, COMPOSER, COMPOSER_SORT, CONDUCTOR, CONDUCTOR_SORT, COPYRIGHT, COUNTRY, COVER_ART, CUSTOM1, CUSTOM2, CUSTOM3, CUSTOM4, CUSTOM5, DISC_NO, DISC_SUBTITLE, DISC_TOTAL, DJMIXER, ENCODER, ENGINEER, ENSEMBLE, ENSEMBLE_SORT, FBPM, GENRE, GROUP, GROUPING, INVOLVED_PERSON, INSTRUMENT, ISRC, IS_CLASSICAL, IS_COMPILATION, IS_SOUNDTRACK, ITUNES_GROUPING, KEY, LANGUAGE, LYRICIST, LYRICS, MEDIA, MIXER, MOOD, MOOD_ACOUSTIC, MOOD_AGGRESSIVE, MOOD_AROUSAL, MOOD_DANCEABILITY, MOOD_ELECTRONIC, MOOD_HAPPY, MOOD_INSTRUMENTAL, MOOD_PARTY, MOOD_RELAXED, MOOD_SAD, MOOD_VALENCE, MOVEMENT, MOVEMENT_NO, MOVEMENT_TOTAL, MUSICBRAINZ_ARTISTID, MUSICBRAINZ_DISC_ID, MUSICBRAINZ_ORIGINAL_RELEASEID, MUSICBRAINZ_RELEASEARTISTID, MUSICBRAINZ_RELEASEID, MUSICBRAINZ_RELEASE_COUNTRY, MUSICBRAINZ_RELEASE_GROUP_ID, MUSICBRAINZ_RELEASE_STATUS, MUSICBRAINZ_RELEASE_TRACK_ID, MUSICBRAINZ_RELEASE_TYPE, MUSICBRAINZ_TRACK_ID, MUSICBRAINZ_WORK_COMPOSITION, MUSICBRAINZ_WORK_COMPOSITION_ID, MUSICBRAINZ_WORK_ID, MUSICBRAINZ_WORK_PART_LEVEL1_ID, MUSICBRAINZ_WORK_PART_LEVEL2_ID, MUSICBRAINZ_WORK_PART_LEVEL3_ID, MUSICBRAINZ_WORK_PART_LEVEL4_ID, MUSICBRAINZ_WORK_PART_LEVEL5_ID, MUSICBRAINZ_WORK_PART_LEVEL6_ID, MUSICIP_ID, OCCASION, OPUS, ORCHESTRA, ORCHESTRA_SORT, ORIGINAL_ALBUM, ORIGINAL_ARTIST, ORIGINAL_LYRICIST, ORIGINAL_YEAR, PART, PART_NUMBER, PART_TYPE, PERFORMER, PERFORMER_NAME, PERFORMER_NAME_SORT, PERIOD, PRODUCER, QUALITY, RANKING, RATING, RECORD_LABEL, REMIXER, SCRIPT, SINGLE_DISC_TRACK_NO, SUBTITLE, TAGS, TEMPO, TIMBRE, TITLE, TITLE_MOVEMENT, MUSICBRAINZ_WORK, TITLE_SORT, TONALITY, TRACK, TRACK_TOTAL, URL_DISCOGS_ARTIST_SITE, URL_DISCOGS_RELEASE_SITE, URL_LYRICS_SITE, URL_OFFICIAL_ARTIST_SITE, URL_OFFICIAL_RELEASE_SITE, URL_WIKIPEDIA_ARTIST_SITE, URL_WIKIPEDIA_RELEASE_SITE, WORK, WORK_PART_LEVEL1, WORK_PART_LEVEL1_TYPE, WORK_PART_LEVEL2, WORK_PART_LEVEL2_TYPE, WORK_PART_LEVEL3, WORK_PART_LEVEL3_TYPE, WORK_PART_LEVEL4, WORK_PART_LEVEL4_TYPE, WORK_PART_LEVEL5, WORK_PART_LEVEL5_TYPE, WORK_PART_LEVEL6, WORK_PART_LEVEL6_TYPE, WORK_TYPE, YEAR};
        $VALUES = arriD3v23FieldKey;
    }

    private ID3v23FieldKey(String string3, String string4, Id3FieldType id3FieldType) {
        this.frameId = string3;
        this.subId = string4;
        this.fieldType = id3FieldType;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(string3);
        stringBuilder.append(":");
        stringBuilder.append(string4);
        this.fieldName = stringBuilder.toString();
    }

    private ID3v23FieldKey(String string3, Id3FieldType id3FieldType) {
        this.frameId = string3;
        this.fieldType = id3FieldType;
        this.fieldName = string3;
    }

    public static ID3v23FieldKey valueOf(String string2) {
        return (ID3v23FieldKey)Enum.valueOf(ID3v23FieldKey.class, (String)string2);
    }

    public static ID3v23FieldKey[] values() {
        return (ID3v23FieldKey[])$VALUES.clone();
    }

    public String getFieldName() {
        return this.fieldName;
    }

    public Id3FieldType getFieldType() {
        return this.fieldType;
    }

    public String getFrameId() {
        return this.frameId;
    }

    public String getSubId() {
        return this.subId;
    }
}

