/*
 * Decompiled with CFR 0.0.
 * 
 * Could not load the following classes:
 *  java.lang.Enum
 *  java.lang.Object
 *  java.lang.String
 *  java.lang.StringBuilder
 */
package org.jaudiotagger.tag.id3;

import org.jaudiotagger.tag.id3.Id3FieldType;
import org.jaudiotagger.tag.id3.valuepair.StandardIPLSKey;

public final class ID3v22FieldKey
extends Enum<ID3v22FieldKey> {
    private static final /* synthetic */ ID3v22FieldKey[] $VALUES;
    public static final /* enum */ ID3v22FieldKey ACOUSTID_FINGERPRINT;
    public static final /* enum */ ID3v22FieldKey ACOUSTID_ID;
    public static final /* enum */ ID3v22FieldKey ALBUM;
    public static final /* enum */ ID3v22FieldKey ALBUM_ARTIST;
    public static final /* enum */ ID3v22FieldKey ALBUM_ARTISTS;
    public static final /* enum */ ID3v22FieldKey ALBUM_ARTISTS_SORT;
    public static final /* enum */ ID3v22FieldKey ALBUM_ARTIST_SORT;
    public static final /* enum */ ID3v22FieldKey ALBUM_SORT;
    public static final /* enum */ ID3v22FieldKey AMAZON_ID;
    public static final /* enum */ ID3v22FieldKey ARRANGER;
    public static final /* enum */ ID3v22FieldKey ARRANGER_SORT;
    public static final /* enum */ ID3v22FieldKey ARTIST;
    public static final /* enum */ ID3v22FieldKey ARTISTS;
    public static final /* enum */ ID3v22FieldKey ARTISTS_SORT;
    public static final /* enum */ ID3v22FieldKey ARTIST_SORT;
    public static final /* enum */ ID3v22FieldKey BARCODE;
    public static final /* enum */ ID3v22FieldKey BPM;
    public static final /* enum */ ID3v22FieldKey CATALOG_NO;
    public static final /* enum */ ID3v22FieldKey CHOIR;
    public static final /* enum */ ID3v22FieldKey CHOIR_SORT;
    public static final /* enum */ ID3v22FieldKey CLASSICAL_CATALOG;
    public static final /* enum */ ID3v22FieldKey CLASSICAL_NICKNAME;
    public static final /* enum */ ID3v22FieldKey COMMENT;
    public static final /* enum */ ID3v22FieldKey COMPOSER;
    public static final /* enum */ ID3v22FieldKey COMPOSER_SORT;
    public static final /* enum */ ID3v22FieldKey CONDUCTOR;
    public static final /* enum */ ID3v22FieldKey CONDUCTOR_SORT;
    public static final /* enum */ ID3v22FieldKey COPYRIGHT;
    public static final /* enum */ ID3v22FieldKey COUNTRY;
    public static final /* enum */ ID3v22FieldKey COVER_ART;
    public static final /* enum */ ID3v22FieldKey CUSTOM1;
    public static final /* enum */ ID3v22FieldKey CUSTOM2;
    public static final /* enum */ ID3v22FieldKey CUSTOM3;
    public static final /* enum */ ID3v22FieldKey CUSTOM4;
    public static final /* enum */ ID3v22FieldKey CUSTOM5;
    public static final /* enum */ ID3v22FieldKey DISC_NO;
    public static final /* enum */ ID3v22FieldKey DISC_SUBTITLE;
    public static final /* enum */ ID3v22FieldKey DISC_TOTAL;
    public static final /* enum */ ID3v22FieldKey DJMIXER;
    public static final /* enum */ ID3v22FieldKey ENCODER;
    public static final /* enum */ ID3v22FieldKey ENGINEER;
    public static final /* enum */ ID3v22FieldKey ENSEMBLE;
    public static final /* enum */ ID3v22FieldKey ENSEMBLE_SORT;
    public static final /* enum */ ID3v22FieldKey FBPM;
    public static final /* enum */ ID3v22FieldKey GENRE;
    public static final /* enum */ ID3v22FieldKey GROUP;
    public static final /* enum */ ID3v22FieldKey GROUPING;
    public static final /* enum */ ID3v22FieldKey INSTRUMENT;
    public static final /* enum */ ID3v22FieldKey INVOLVED_PERSON;
    public static final /* enum */ ID3v22FieldKey ISRC;
    public static final /* enum */ ID3v22FieldKey IS_CLASSICAL;
    public static final /* enum */ ID3v22FieldKey IS_COMPILATION;
    public static final /* enum */ ID3v22FieldKey IS_SOUNDTRACK;
    public static final /* enum */ ID3v22FieldKey ITUNES_GROUPING;
    public static final /* enum */ ID3v22FieldKey KEY;
    public static final /* enum */ ID3v22FieldKey LANGUAGE;
    public static final /* enum */ ID3v22FieldKey LYRICIST;
    public static final /* enum */ ID3v22FieldKey LYRICS;
    public static final /* enum */ ID3v22FieldKey MEDIA;
    public static final /* enum */ ID3v22FieldKey MIXER;
    public static final /* enum */ ID3v22FieldKey MOOD;
    public static final /* enum */ ID3v22FieldKey MOOD_ACOUSTIC;
    public static final /* enum */ ID3v22FieldKey MOOD_AGGRESSIVE;
    public static final /* enum */ ID3v22FieldKey MOOD_AROUSAL;
    public static final /* enum */ ID3v22FieldKey MOOD_DANCEABILITY;
    public static final /* enum */ ID3v22FieldKey MOOD_ELECTRONIC;
    public static final /* enum */ ID3v22FieldKey MOOD_HAPPY;
    public static final /* enum */ ID3v22FieldKey MOOD_INSTRUMENTAL;
    public static final /* enum */ ID3v22FieldKey MOOD_PARTY;
    public static final /* enum */ ID3v22FieldKey MOOD_RELAXED;
    public static final /* enum */ ID3v22FieldKey MOOD_SAD;
    public static final /* enum */ ID3v22FieldKey MOOD_VALENCE;
    public static final /* enum */ ID3v22FieldKey MOVEMENT;
    public static final /* enum */ ID3v22FieldKey MOVEMENT_NO;
    public static final /* enum */ ID3v22FieldKey MOVEMENT_TOTAL;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_ARTISTID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_DISC_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_ORIGINAL_RELEASEID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASEARTISTID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASEID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASE_COUNTRY;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASE_GROUP_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASE_STATUS;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASE_TRACK_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_RELEASE_TYPE;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_TRACK_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_COMPOSITION;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_COMPOSITION_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID;
    public static final /* enum */ ID3v22FieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID;
    public static final /* enum */ ID3v22FieldKey MUSICIP_ID;
    public static final /* enum */ ID3v22FieldKey OCCASION;
    public static final /* enum */ ID3v22FieldKey OPUS;
    public static final /* enum */ ID3v22FieldKey ORCHESTRA;
    public static final /* enum */ ID3v22FieldKey ORCHESTRA_SORT;
    public static final /* enum */ ID3v22FieldKey ORIGINAL_ALBUM;
    public static final /* enum */ ID3v22FieldKey ORIGINAL_ARTIST;
    public static final /* enum */ ID3v22FieldKey ORIGINAL_LYRICIST;
    public static final /* enum */ ID3v22FieldKey ORIGINAL_YEAR;
    public static final /* enum */ ID3v22FieldKey PART;
    public static final /* enum */ ID3v22FieldKey PART_NUMBER;
    public static final /* enum */ ID3v22FieldKey PART_TYPE;
    public static final /* enum */ ID3v22FieldKey PERFORMER;
    public static final /* enum */ ID3v22FieldKey PERFORMER_NAME;
    public static final /* enum */ ID3v22FieldKey PERFORMER_NAME_SORT;
    public static final /* enum */ ID3v22FieldKey PERIOD;
    public static final /* enum */ ID3v22FieldKey PRODUCER;
    public static final /* enum */ ID3v22FieldKey QUALITY;
    public static final /* enum */ ID3v22FieldKey RANKING;
    public static final /* enum */ ID3v22FieldKey RATING;
    public static final /* enum */ ID3v22FieldKey RECORD_LABEL;
    public static final /* enum */ ID3v22FieldKey REMIXER;
    public static final /* enum */ ID3v22FieldKey SCRIPT;
    public static final /* enum */ ID3v22FieldKey SINGLE_DISC_TRACK_NO;
    public static final /* enum */ ID3v22FieldKey SUBTITLE;
    public static final /* enum */ ID3v22FieldKey TAGS;
    public static final /* enum */ ID3v22FieldKey TEMPO;
    public static final /* enum */ ID3v22FieldKey TIMBRE;
    public static final /* enum */ ID3v22FieldKey TITLE;
    public static final /* enum */ ID3v22FieldKey TITLE_MOVEMENT;
    public static final /* enum */ ID3v22FieldKey TITLE_SORT;
    public static final /* enum */ ID3v22FieldKey TONALITY;
    public static final /* enum */ ID3v22FieldKey TRACK;
    public static final /* enum */ ID3v22FieldKey TRACK_TOTAL;
    public static final /* enum */ ID3v22FieldKey URL_DISCOGS_ARTIST_SITE;
    public static final /* enum */ ID3v22FieldKey URL_DISCOGS_RELEASE_SITE;
    public static final /* enum */ ID3v22FieldKey URL_LYRICS_SITE;
    public static final /* enum */ ID3v22FieldKey URL_OFFICIAL_ARTIST_SITE;
    public static final /* enum */ ID3v22FieldKey URL_OFFICIAL_RELEASE_SITE;
    public static final /* enum */ ID3v22FieldKey URL_WIKIPEDIA_ARTIST_SITE;
    public static final /* enum */ ID3v22FieldKey URL_WIKIPEDIA_RELEASE_SITE;
    public static final /* enum */ ID3v22FieldKey WORK;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL1;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL1_TYPE;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL2;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL2_TYPE;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL3;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL3_TYPE;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL4;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL4_TYPE;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL5;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL5_TYPE;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL6;
    public static final /* enum */ ID3v22FieldKey WORK_PART_LEVEL6_TYPE;
    public static final /* enum */ ID3v22FieldKey WORK_TYPE;
    public static final /* enum */ ID3v22FieldKey YEAR;
    private String fieldName;
    private Id3FieldType fieldType;
    private String frameId;
    private String subId;

    static {
        ID3v22FieldKey iD3v22FieldKey;
        ID3v22FieldKey iD3v22FieldKey2;
        ID3v22FieldKey iD3v22FieldKey3;
        ID3v22FieldKey iD3v22FieldKey4;
        ID3v22FieldKey iD3v22FieldKey5;
        ID3v22FieldKey iD3v22FieldKey6;
        ID3v22FieldKey iD3v22FieldKey7;
        ID3v22FieldKey iD3v22FieldKey8;
        ID3v22FieldKey iD3v22FieldKey9;
        ID3v22FieldKey iD3v22FieldKey10;
        ID3v22FieldKey iD3v22FieldKey11;
        ID3v22FieldKey iD3v22FieldKey12;
        ID3v22FieldKey iD3v22FieldKey13;
        ID3v22FieldKey iD3v22FieldKey14;
        ID3v22FieldKey iD3v22FieldKey15;
        ID3v22FieldKey iD3v22FieldKey16;
        ID3v22FieldKey iD3v22FieldKey17;
        ID3v22FieldKey iD3v22FieldKey18;
        ID3v22FieldKey iD3v22FieldKey19;
        ID3v22FieldKey iD3v22FieldKey20;
        ID3v22FieldKey iD3v22FieldKey21;
        ID3v22FieldKey iD3v22FieldKey22;
        ID3v22FieldKey iD3v22FieldKey23;
        ID3v22FieldKey iD3v22FieldKey24;
        ID3v22FieldKey iD3v22FieldKey25;
        ID3v22FieldKey iD3v22FieldKey26;
        ID3v22FieldKey iD3v22FieldKey27;
        ID3v22FieldKey iD3v22FieldKey28;
        ID3v22FieldKey iD3v22FieldKey29;
        ID3v22FieldKey iD3v22FieldKey30;
        ID3v22FieldKey iD3v22FieldKey31;
        ID3v22FieldKey iD3v22FieldKey32;
        ID3v22FieldKey iD3v22FieldKey33;
        ID3v22FieldKey iD3v22FieldKey34;
        ID3v22FieldKey iD3v22FieldKey35;
        ID3v22FieldKey iD3v22FieldKey36;
        ID3v22FieldKey iD3v22FieldKey37;
        ID3v22FieldKey iD3v22FieldKey38;
        ID3v22FieldKey iD3v22FieldKey39;
        ID3v22FieldKey iD3v22FieldKey40;
        ID3v22FieldKey iD3v22FieldKey41;
        ID3v22FieldKey iD3v22FieldKey42;
        ID3v22FieldKey iD3v22FieldKey43;
        ID3v22FieldKey iD3v22FieldKey44;
        ID3v22FieldKey iD3v22FieldKey45;
        ID3v22FieldKey iD3v22FieldKey46;
        ID3v22FieldKey iD3v22FieldKey47;
        ID3v22FieldKey iD3v22FieldKey48;
        ID3v22FieldKey iD3v22FieldKey49;
        ID3v22FieldKey iD3v22FieldKey50;
        ID3v22FieldKey iD3v22FieldKey51;
        ID3v22FieldKey iD3v22FieldKey52;
        ID3v22FieldKey iD3v22FieldKey53;
        ID3v22FieldKey iD3v22FieldKey54;
        ID3v22FieldKey iD3v22FieldKey55;
        ID3v22FieldKey iD3v22FieldKey56;
        ID3v22FieldKey iD3v22FieldKey57;
        ID3v22FieldKey iD3v22FieldKey58;
        ID3v22FieldKey iD3v22FieldKey59;
        ID3v22FieldKey iD3v22FieldKey60;
        ID3v22FieldKey iD3v22FieldKey61;
        ID3v22FieldKey iD3v22FieldKey62;
        ID3v22FieldKey iD3v22FieldKey63;
        ID3v22FieldKey iD3v22FieldKey64;
        ID3v22FieldKey iD3v22FieldKey65;
        ID3v22FieldKey iD3v22FieldKey66;
        ID3v22FieldKey iD3v22FieldKey67;
        ID3v22FieldKey iD3v22FieldKey68;
        ID3v22FieldKey iD3v22FieldKey69;
        ID3v22FieldKey iD3v22FieldKey70;
        ID3v22FieldKey iD3v22FieldKey71;
        ID3v22FieldKey iD3v22FieldKey72;
        ID3v22FieldKey iD3v22FieldKey73;
        ID3v22FieldKey iD3v22FieldKey74;
        ID3v22FieldKey iD3v22FieldKey75;
        ID3v22FieldKey iD3v22FieldKey76;
        ID3v22FieldKey iD3v22FieldKey77;
        ID3v22FieldKey iD3v22FieldKey78;
        ID3v22FieldKey iD3v22FieldKey79;
        ID3v22FieldKey iD3v22FieldKey80;
        ID3v22FieldKey iD3v22FieldKey81;
        ID3v22FieldKey iD3v22FieldKey82;
        ID3v22FieldKey iD3v22FieldKey83;
        ID3v22FieldKey iD3v22FieldKey84;
        ID3v22FieldKey iD3v22FieldKey85;
        ID3v22FieldKey iD3v22FieldKey86;
        ID3v22FieldKey iD3v22FieldKey87;
        ID3v22FieldKey iD3v22FieldKey88;
        ID3v22FieldKey iD3v22FieldKey89;
        ID3v22FieldKey iD3v22FieldKey90;
        ID3v22FieldKey iD3v22FieldKey91;
        ID3v22FieldKey iD3v22FieldKey92;
        ID3v22FieldKey iD3v22FieldKey93;
        ID3v22FieldKey iD3v22FieldKey94;
        ID3v22FieldKey iD3v22FieldKey95;
        ID3v22FieldKey iD3v22FieldKey96;
        ID3v22FieldKey iD3v22FieldKey97;
        ID3v22FieldKey iD3v22FieldKey98;
        ID3v22FieldKey iD3v22FieldKey99;
        ID3v22FieldKey iD3v22FieldKey100;
        ID3v22FieldKey iD3v22FieldKey101;
        ID3v22FieldKey iD3v22FieldKey102;
        ID3v22FieldKey iD3v22FieldKey103;
        ID3v22FieldKey iD3v22FieldKey104;
        ID3v22FieldKey iD3v22FieldKey105;
        ID3v22FieldKey iD3v22FieldKey106;
        Id3FieldType id3FieldType = Id3FieldType.TEXT;
        ACOUSTID_FINGERPRINT = iD3v22FieldKey12 = new ID3v22FieldKey("TXX", "Acoustid Fingerprint", id3FieldType);
        ACOUSTID_ID = iD3v22FieldKey29 = new ID3v22FieldKey("TXX", "Acoustid Id", id3FieldType);
        ALBUM = new ID3v22FieldKey("TAL", id3FieldType);
        ALBUM_ARTIST = new ID3v22FieldKey("TP2", id3FieldType);
        ALBUM_ARTIST_SORT = new ID3v22FieldKey("TS2", id3FieldType);
        ALBUM_ARTISTS = iD3v22FieldKey52 = new ID3v22FieldKey("TXX", "ALBUM_ARTISTS", id3FieldType);
        ALBUM_ARTISTS_SORT = iD3v22FieldKey47 = new ID3v22FieldKey("TXX", "ALBUM_ARTISTS_SORT", id3FieldType);
        ALBUM_SORT = new ID3v22FieldKey("TSA", id3FieldType);
        AMAZON_ID = iD3v22FieldKey32 = new ID3v22FieldKey("TXX", "ASIN", id3FieldType);
        ARRANGER = iD3v22FieldKey73 = new ID3v22FieldKey("IPL", StandardIPLSKey.ARRANGER.getKey(), id3FieldType);
        ARRANGER_SORT = iD3v22FieldKey14 = new ID3v22FieldKey("TXX", "ARRANGER_SORT", id3FieldType);
        ARTIST = new ID3v22FieldKey("TP1", id3FieldType);
        ARTISTS = iD3v22FieldKey85 = new ID3v22FieldKey("TXX", "ARTISTS", id3FieldType);
        ARTISTS_SORT = iD3v22FieldKey106 = new ID3v22FieldKey("TXX", "ARTISTS_SORT", id3FieldType);
        ARTIST_SORT = new ID3v22FieldKey("TSP", id3FieldType);
        BARCODE = iD3v22FieldKey86 = new ID3v22FieldKey("TXX", "BARCODE", id3FieldType);
        BPM = new ID3v22FieldKey("TBP", id3FieldType);
        CATALOG_NO = iD3v22FieldKey72 = new ID3v22FieldKey("TXX", "CATALOGNUMBER", id3FieldType);
        CHOIR = iD3v22FieldKey68 = new ID3v22FieldKey("TXX", "CHOIR", id3FieldType);
        CHOIR_SORT = iD3v22FieldKey105 = new ID3v22FieldKey("TXX", "CHOIR_SORT", id3FieldType);
        CLASSICAL_CATALOG = iD3v22FieldKey6 = new ID3v22FieldKey("TXX", "CLASSICAL_CATALOG", id3FieldType);
        CLASSICAL_NICKNAME = iD3v22FieldKey19 = new ID3v22FieldKey("TXX", "CLASSICAL_NICKNAME", id3FieldType);
        COMMENT = new ID3v22FieldKey("COM", id3FieldType);
        COMPOSER = new ID3v22FieldKey("TCM", id3FieldType);
        COMPOSER_SORT = new ID3v22FieldKey("TSC", id3FieldType);
        CONDUCTOR = new ID3v22FieldKey("TPE", id3FieldType);
        CONDUCTOR_SORT = iD3v22FieldKey88 = new ID3v22FieldKey("TXX", "CONDUCTOR_SORT", id3FieldType);
        COPYRIGHT = new ID3v22FieldKey("TCR", id3FieldType);
        COUNTRY = iD3v22FieldKey45 = new ID3v22FieldKey("TXX", "Country", id3FieldType);
        COVER_ART = new ID3v22FieldKey("PIC", Id3FieldType.BINARY);
        CUSTOM1 = iD3v22FieldKey79 = new ID3v22FieldKey("COM", "Songs-DB_Custom1", id3FieldType);
        CUSTOM2 = iD3v22FieldKey94 = new ID3v22FieldKey("COM", "Songs-DB_Custom2", id3FieldType);
        CUSTOM3 = iD3v22FieldKey11 = new ID3v22FieldKey("COM", "Songs-DB_Custom3", id3FieldType);
        CUSTOM4 = iD3v22FieldKey103 = new ID3v22FieldKey("COM", "Songs-DB_Custom4", id3FieldType);
        CUSTOM5 = iD3v22FieldKey35 = new ID3v22FieldKey("COM", "Songs-DB_Custom5", id3FieldType);
        DISC_NO = new ID3v22FieldKey("TPA", id3FieldType);
        DISC_SUBTITLE = new ID3v22FieldKey("TPS", id3FieldType);
        DISC_TOTAL = new ID3v22FieldKey("TPA", id3FieldType);
        DJMIXER = iD3v22FieldKey78 = new ID3v22FieldKey("IPL", StandardIPLSKey.DJMIXER.getKey(), id3FieldType);
        ENCODER = new ID3v22FieldKey("TEN", id3FieldType);
        ENGINEER = iD3v22FieldKey57 = new ID3v22FieldKey("IPL", StandardIPLSKey.ENGINEER.getKey(), id3FieldType);
        ENSEMBLE = iD3v22FieldKey49 = new ID3v22FieldKey("TXX", "ENSEMBLE", id3FieldType);
        ENSEMBLE_SORT = iD3v22FieldKey18 = new ID3v22FieldKey("TXX", "ENSEMBLE_SORT", id3FieldType);
        FBPM = iD3v22FieldKey7 = new ID3v22FieldKey("TXX", "FBPM", id3FieldType);
        GENRE = new ID3v22FieldKey("TCO", id3FieldType);
        GROUP = iD3v22FieldKey42 = new ID3v22FieldKey("TXX", "GROUP", id3FieldType);
        Id3FieldType id3FieldType2 = Id3FieldType.TEXT;
        GROUPING = new ID3v22FieldKey("TT1", id3FieldType2);
        MOOD_INSTRUMENTAL = iD3v22FieldKey58 = new ID3v22FieldKey("TXX", "MOOD_INSTRUMENTAL", id3FieldType2);
        INVOLVED_PERSON = new ID3v22FieldKey("IPL", id3FieldType2);
        INSTRUMENT = iD3v22FieldKey82 = new ID3v22FieldKey("TXX", "INSTRUMENT", id3FieldType2);
        ISRC = new ID3v22FieldKey("TRC", id3FieldType2);
        IS_CLASSICAL = iD3v22FieldKey91 = new ID3v22FieldKey("TXX", "IS_CLASSICAL", id3FieldType2);
        IS_COMPILATION = new ID3v22FieldKey("TCP", id3FieldType2);
        IS_SOUNDTRACK = iD3v22FieldKey51 = new ID3v22FieldKey("TXX", "IS_SOUNDTRACK", id3FieldType2);
        ITUNES_GROUPING = new ID3v22FieldKey("GP1", id3FieldType2);
        KEY = new ID3v22FieldKey("TKE", id3FieldType2);
        LANGUAGE = new ID3v22FieldKey("TLA", id3FieldType2);
        LYRICIST = new ID3v22FieldKey("TXT", id3FieldType2);
        LYRICS = new ID3v22FieldKey("ULT", id3FieldType2);
        MEDIA = new ID3v22FieldKey("TMT", id3FieldType2);
        MIXER = iD3v22FieldKey16 = new ID3v22FieldKey("IPL", StandardIPLSKey.MIXER.getKey(), id3FieldType2);
        MOOD = iD3v22FieldKey84 = new ID3v22FieldKey("TXX", "MOOD", id3FieldType2);
        MOOD_ACOUSTIC = iD3v22FieldKey55 = new ID3v22FieldKey("TXX", "MOOD_ACOUSTIC", id3FieldType2);
        MOOD_AGGRESSIVE = iD3v22FieldKey65 = new ID3v22FieldKey("TXX", "MOOD_AGGRESSIVE", id3FieldType2);
        MOOD_AROUSAL = iD3v22FieldKey77 = new ID3v22FieldKey("TXX", "MOOD_AROUSAL", id3FieldType2);
        MOOD_DANCEABILITY = iD3v22FieldKey41 = new ID3v22FieldKey("TXX", "MOOD_DANCEABILITY", id3FieldType2);
        MOOD_ELECTRONIC = iD3v22FieldKey8 = new ID3v22FieldKey("TXX", "MOOD_ELECTRONIC", id3FieldType2);
        MOOD_HAPPY = iD3v22FieldKey31 = new ID3v22FieldKey("TXX", "MOOD_HAPPY", id3FieldType2);
        MOOD_PARTY = iD3v22FieldKey70 = new ID3v22FieldKey("TXX", "MOOD_PARTY", id3FieldType2);
        MOOD_RELAXED = iD3v22FieldKey64 = new ID3v22FieldKey("TXX", "MOOD_RELAXED", id3FieldType2);
        MOOD_SAD = iD3v22FieldKey53 = new ID3v22FieldKey("TXX", "MOOD_SAD", id3FieldType2);
        MOOD_VALENCE = iD3v22FieldKey92 = new ID3v22FieldKey("TXX", "MOOD_VALENCE", id3FieldType2);
        MOVEMENT = new ID3v22FieldKey("MVN", id3FieldType2);
        MOVEMENT_NO = new ID3v22FieldKey("MVI", id3FieldType2);
        MOVEMENT_TOTAL = new ID3v22FieldKey("MVI", id3FieldType2);
        MUSICBRAINZ_ARTISTID = iD3v22FieldKey28 = new ID3v22FieldKey("TXX", "MusicBrainz Artist Id", id3FieldType2);
        MUSICBRAINZ_DISC_ID = iD3v22FieldKey39 = new ID3v22FieldKey("TXX", "MusicBrainz Disc Id", id3FieldType2);
        MUSICBRAINZ_ORIGINAL_RELEASEID = iD3v22FieldKey101 = new ID3v22FieldKey("TXX", "MusicBrainz Original Album Id", id3FieldType2);
        MUSICBRAINZ_RELEASEARTISTID = iD3v22FieldKey61 = new ID3v22FieldKey("TXX", "MusicBrainz Album Artist Id", id3FieldType2);
        MUSICBRAINZ_RELEASEID = iD3v22FieldKey89 = new ID3v22FieldKey("TXX", "MusicBrainz Album Id", id3FieldType2);
        MUSICBRAINZ_RELEASE_COUNTRY = iD3v22FieldKey23 = new ID3v22FieldKey("TXX", "MusicBrainz Album Release Country", id3FieldType2);
        MUSICBRAINZ_RELEASE_GROUP_ID = iD3v22FieldKey3 = new ID3v22FieldKey("TXX", "MusicBrainz Release Group Id", id3FieldType2);
        MUSICBRAINZ_RELEASE_STATUS = iD3v22FieldKey96 = new ID3v22FieldKey("TXX", "MusicBrainz Album Status", id3FieldType2);
        MUSICBRAINZ_RELEASE_TRACK_ID = iD3v22FieldKey74 = new ID3v22FieldKey("TXX", "MusicBrainz Release Track Id", id3FieldType2);
        MUSICBRAINZ_RELEASE_TYPE = iD3v22FieldKey69 = new ID3v22FieldKey("TXX", "MusicBrainz Album Type", id3FieldType2);
        MUSICBRAINZ_TRACK_ID = iD3v22FieldKey95 = new ID3v22FieldKey("UFI", "http://musicbrainz.org", id3FieldType2);
        MUSICBRAINZ_WORK_COMPOSITION = iD3v22FieldKey34 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_COMPOSITION", id3FieldType2);
        MUSICBRAINZ_WORK_COMPOSITION_ID = iD3v22FieldKey13 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_COMPOSITION_ID", id3FieldType2);
        MUSICBRAINZ_WORK_ID = iD3v22FieldKey102 = new ID3v22FieldKey("TXX", "MusicBrainz Work Id", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL1_ID = iD3v22FieldKey33 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL1_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL2_ID = iD3v22FieldKey99 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL2_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL3_ID = iD3v22FieldKey71 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL3_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL4_ID = iD3v22FieldKey30 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL4_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL5_ID = iD3v22FieldKey104 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL5_ID", id3FieldType2);
        MUSICBRAINZ_WORK_PART_LEVEL6_ID = iD3v22FieldKey5 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL6_ID", id3FieldType2);
        Id3FieldType id3FieldType3 = Id3FieldType.TEXT;
        MUSICIP_ID = iD3v22FieldKey98 = new ID3v22FieldKey("TXX", "MusicIP PUID", id3FieldType3);
        OCCASION = iD3v22FieldKey59 = new ID3v22FieldKey("COM", "Songs-DB_Occasion", id3FieldType3);
        OPUS = iD3v22FieldKey81 = new ID3v22FieldKey("TXX", "OPUS", id3FieldType3);
        ORCHESTRA = iD3v22FieldKey15 = new ID3v22FieldKey("TXX", "ORCHESTRA", id3FieldType3);
        ORCHESTRA_SORT = iD3v22FieldKey2 = new ID3v22FieldKey("TXX", "ORCHESTRA_SORT", id3FieldType3);
        ORIGINAL_ALBUM = new ID3v22FieldKey("TOT", id3FieldType3);
        ORIGINAL_ARTIST = new ID3v22FieldKey("TOA", id3FieldType3);
        ORIGINAL_LYRICIST = new ID3v22FieldKey("TOL", id3FieldType3);
        ORIGINAL_YEAR = new ID3v22FieldKey("TOR", id3FieldType3);
        PART = iD3v22FieldKey100 = new ID3v22FieldKey("TXX", "PART", id3FieldType3);
        PART_NUMBER = iD3v22FieldKey40 = new ID3v22FieldKey("TXX", "PARTNUMBER", id3FieldType3);
        PART_TYPE = iD3v22FieldKey56 = new ID3v22FieldKey("TXX", "PART_TYPE", id3FieldType3);
        PERFORMER = new ID3v22FieldKey("IPL", id3FieldType3);
        PERFORMER_NAME = iD3v22FieldKey97 = new ID3v22FieldKey("TXX", "PERFORMER_NAME", id3FieldType3);
        PERFORMER_NAME_SORT = iD3v22FieldKey37 = new ID3v22FieldKey("TXX", "PERFORMER_NAME_SORT", id3FieldType3);
        PERIOD = iD3v22FieldKey24 = new ID3v22FieldKey("TXX", "PERIOD", id3FieldType3);
        PRODUCER = iD3v22FieldKey10 = new ID3v22FieldKey("IPL", StandardIPLSKey.PRODUCER.getKey(), id3FieldType3);
        QUALITY = iD3v22FieldKey54 = new ID3v22FieldKey("COM", "Songs-DB_Preference", id3FieldType3);
        RANKING = iD3v22FieldKey62 = new ID3v22FieldKey("TXX", "RANKING", id3FieldType3);
        RATING = new ID3v22FieldKey("POP", id3FieldType3);
        RECORD_LABEL = new ID3v22FieldKey("TPB", id3FieldType3);
        REMIXER = new ID3v22FieldKey("TP4", id3FieldType3);
        SCRIPT = iD3v22FieldKey43 = new ID3v22FieldKey("TXX", "Script", id3FieldType3);
        SINGLE_DISC_TRACK_NO = iD3v22FieldKey27 = new ID3v22FieldKey("TXX", "SINGLE_DISC_TRACK_NO", id3FieldType3);
        SUBTITLE = new ID3v22FieldKey("TT3", id3FieldType3);
        TAGS = iD3v22FieldKey4 = new ID3v22FieldKey("TXX", "TAGS", id3FieldType3);
        TEMPO = iD3v22FieldKey48 = new ID3v22FieldKey("COM", "Songs-DB_Tempo", id3FieldType3);
        TIMBRE = iD3v22FieldKey83 = new ID3v22FieldKey("TXX", "TIMBRE_BRIGHTNESS", id3FieldType3);
        TITLE = new ID3v22FieldKey("TT2", id3FieldType3);
        TITLE_MOVEMENT = iD3v22FieldKey67 = new ID3v22FieldKey("TXX", "TITLE_MOVEMENT", id3FieldType3);
        MUSICBRAINZ_WORK = iD3v22FieldKey50 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK", id3FieldType3);
        TITLE_SORT = new ID3v22FieldKey("TST", id3FieldType3);
        TONALITY = iD3v22FieldKey90 = new ID3v22FieldKey("TXX", "TONALITY", id3FieldType3);
        TRACK = new ID3v22FieldKey("TRK", id3FieldType3);
        TRACK_TOTAL = new ID3v22FieldKey("TRK", id3FieldType3);
        URL_DISCOGS_ARTIST_SITE = iD3v22FieldKey9 = new ID3v22FieldKey("WXX", "DISCOGS_ARTIST", id3FieldType3);
        URL_DISCOGS_RELEASE_SITE = iD3v22FieldKey22 = new ID3v22FieldKey("WXX", "DISCOGS_RELEASE", id3FieldType3);
        URL_LYRICS_SITE = iD3v22FieldKey93 = new ID3v22FieldKey("WXX", "LYRICS_SITE", id3FieldType3);
        URL_OFFICIAL_ARTIST_SITE = new ID3v22FieldKey("WAR", id3FieldType3);
        URL_OFFICIAL_RELEASE_SITE = iD3v22FieldKey44 = new ID3v22FieldKey("WXX", "OFFICIAL_RELEASE", id3FieldType3);
        URL_WIKIPEDIA_ARTIST_SITE = iD3v22FieldKey63 = new ID3v22FieldKey("WXX", "WIKIPEDIA_ARTIST", id3FieldType3);
        URL_WIKIPEDIA_RELEASE_SITE = iD3v22FieldKey87 = new ID3v22FieldKey("WXX", "WIKIPEDIA_RELEASE", id3FieldType3);
        WORK = iD3v22FieldKey46 = new ID3v22FieldKey("TXX", "WORK", id3FieldType3);
        WORK_PART_LEVEL1 = iD3v22FieldKey = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL1", id3FieldType3);
        WORK_PART_LEVEL1_TYPE = iD3v22FieldKey25 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL1_TYPE", id3FieldType3);
        WORK_PART_LEVEL2 = iD3v22FieldKey38 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL2", id3FieldType3);
        WORK_PART_LEVEL2_TYPE = iD3v22FieldKey60 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL2_TYPE", id3FieldType3);
        WORK_PART_LEVEL3 = iD3v22FieldKey36 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL3", id3FieldType3);
        WORK_PART_LEVEL3_TYPE = iD3v22FieldKey66 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL3_TYPE", id3FieldType3);
        Id3FieldType id3FieldType4 = Id3FieldType.TEXT;
        WORK_PART_LEVEL4 = iD3v22FieldKey17 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL4", id3FieldType4);
        WORK_PART_LEVEL4_TYPE = iD3v22FieldKey21 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL4_TYPE", id3FieldType4);
        WORK_PART_LEVEL5 = iD3v22FieldKey76 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL5", id3FieldType4);
        WORK_PART_LEVEL5_TYPE = iD3v22FieldKey75 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL5_TYPE", id3FieldType4);
        WORK_PART_LEVEL6 = iD3v22FieldKey20 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL6", id3FieldType4);
        WORK_PART_LEVEL6_TYPE = iD3v22FieldKey26 = new ID3v22FieldKey("TXX", "MUSICBRAINZ_WORK_PART_LEVEL6_TYPE", id3FieldType4);
        WORK_TYPE = iD3v22FieldKey80 = new ID3v22FieldKey("TXX", "WORK_TYPE", id3FieldType4);
        YEAR = new ID3v22FieldKey("TYE", id3FieldType4);
        ID3v22FieldKey[] arriD3v22FieldKey = new ID3v22FieldKey[]{ACOUSTID_FINGERPRINT, ACOUSTID_ID, ALBUM, ALBUM_ARTIST, ALBUM_ARTIST_SORT, ALBUM_ARTISTS, ALBUM_ARTISTS_SORT, ALBUM_SORT, AMAZON_ID, ARRANGER, ARRANGER_SORT, ARTIST, ARTISTS, ARTISTS_SORT, ARTIST_SORT, BARCODE, BPM, CATALOG_NO, CHOIR, CHOIR_SORT, CLASSICAL_CATALOG, CLASSICAL_NICKNAME, COMMENT, COMPOSER, COMPOSER_SORT, CONDUCTOR, CONDUCTOR_SORT, COPYRIGHT, COUNTRY, COVER_ART, CUSTOM1, CUSTOM2, CUSTOM3, CUSTOM4, CUSTOM5, DISC_NO, DISC_SUBTITLE, DISC_TOTAL, DJMIXER, ENCODER, ENGINEER, ENSEMBLE, ENSEMBLE_SORT, FBPM, GENRE, GROUP, GROUPING, MOOD_INSTRUMENTAL, INVOLVED_PERSON, INSTRUMENT, ISRC, IS_CLASSICAL, IS_COMPILATION, IS_SOUNDTRACK, ITUNES_GROUPING, KEY, LANGUAGE, LYRICIST, LYRICS, MEDIA, MIXER, MOOD, MOOD_ACOUSTIC, MOOD_AGGRESSIVE, MOOD_AROUSAL, MOOD_DANCEABILITY, MOOD_ELECTRONIC, MOOD_HAPPY, MOOD_PARTY, MOOD_RELAXED, MOOD_SAD, MOOD_VALENCE, MOVEMENT, MOVEMENT_NO, MOVEMENT_TOTAL, MUSICBRAINZ_ARTISTID, MUSICBRAINZ_DISC_ID, MUSICBRAINZ_ORIGINAL_RELEASEID, MUSICBRAINZ_RELEASEARTISTID, MUSICBRAINZ_RELEASEID, MUSICBRAINZ_RELEASE_COUNTRY, MUSICBRAINZ_RELEASE_GROUP_ID, MUSICBRAINZ_RELEASE_STATUS, MUSICBRAINZ_RELEASE_TRACK_ID, MUSICBRAINZ_RELEASE_TYPE, MUSICBRAINZ_TRACK_ID, MUSICBRAINZ_WORK_COMPOSITION, MUSICBRAINZ_WORK_COMPOSITION_ID, MUSICBRAINZ_WORK_ID, MUSICBRAINZ_WORK_PART_LEVEL1_ID, MUSICBRAINZ_WORK_PART_LEVEL2_ID, MUSICBRAINZ_WORK_PART_LEVEL3_ID, MUSICBRAINZ_WORK_PART_LEVEL4_ID, MUSICBRAINZ_WORK_PART_LEVEL5_ID, MUSICBRAINZ_WORK_PART_LEVEL6_ID, MUSICIP_ID, OCCASION, OPUS, ORCHESTRA, ORCHESTRA_SORT, ORIGINAL_ALBUM, ORIGINAL_ARTIST, ORIGINAL_LYRICIST, ORIGINAL_YEAR, PART, PART_NUMBER, PART_TYPE, PERFORMER, PERFORMER_NAME, PERFORMER_NAME_SORT, PERIOD, PRODUCER, QUALITY, RANKING, RATING, RECORD_LABEL, REMIXER, SCRIPT, SINGLE_DISC_TRACK_NO, SUBTITLE, TAGS, TEMPO, TIMBRE, TITLE, TITLE_MOVEMENT, MUSICBRAINZ_WORK, TITLE_SORT, TONALITY, TRACK, TRACK_TOTAL, URL_DISCOGS_ARTIST_SITE, URL_DISCOGS_RELEASE_SITE, URL_LYRICS_SITE, URL_OFFICIAL_ARTIST_SITE, URL_OFFICIAL_RELEASE_SITE, URL_WIKIPEDIA_ARTIST_SITE, URL_WIKIPEDIA_RELEASE_SITE, WORK, WORK_PART_LEVEL1, WORK_PART_LEVEL1_TYPE, WORK_PART_LEVEL2, WORK_PART_LEVEL2_TYPE, WORK_PART_LEVEL3, WORK_PART_LEVEL3_TYPE, WORK_PART_LEVEL4, WORK_PART_LEVEL4_TYPE, WORK_PART_LEVEL5, WORK_PART_LEVEL5_TYPE, WORK_PART_LEVEL6, WORK_PART_LEVEL6_TYPE, WORK_TYPE, YEAR};
        $VALUES = arriD3v22FieldKey;
    }

    private ID3v22FieldKey(String string3, String string4, Id3FieldType id3FieldType) {
        this.frameId = string3;
        this.subId = string4;
        this.fieldType = id3FieldType;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(string3);
        stringBuilder.append(":");
        stringBuilder.append(string4);
        this.fieldName = stringBuilder.toString();
    }

    private ID3v22FieldKey(String string3, Id3FieldType id3FieldType) {
        this.frameId = string3;
        this.fieldType = id3FieldType;
        this.fieldName = string3;
    }

    public static ID3v22FieldKey valueOf(String string2) {
        return (ID3v22FieldKey)Enum.valueOf(ID3v22FieldKey.class, (String)string2);
    }

    public static ID3v22FieldKey[] values() {
        return (ID3v22FieldKey[])$VALUES.clone();
    }

    public String getFieldName() {
        return this.fieldName;
    }

    public Id3FieldType getFieldType() {
        return this.fieldType;
    }

    public String getFrameId() {
        return this.frameId;
    }

    public String getSubId() {
        return this.subId;
    }
}

