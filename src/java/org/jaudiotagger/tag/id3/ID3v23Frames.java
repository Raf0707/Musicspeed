/*
 * Decompiled with CFR 0.0.
 * 
 * Could not load the following classes:
 *  java.lang.Class
 *  java.lang.Enum
 *  java.lang.Object
 *  java.lang.String
 *  java.util.EnumMap
 *  java.util.Map
 *  java.util.Map$Entry
 *  java.util.Set
 *  java.util.TreeSet
 */
package org.jaudiotagger.tag.id3;

import java.util.EnumMap;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import org.jaudiotagger.tag.FieldKey;
import org.jaudiotagger.tag.datatype.AbstractValuePair;
import org.jaudiotagger.tag.id3.ID3Frames;
import org.jaudiotagger.tag.id3.ID3v23FieldKey;

public class ID3v23Frames
extends ID3Frames {
    public static final String FRAME_ID_V3_ACCOMPANIMENT = "TPE2";
    public static final String FRAME_ID_V3_ALBUM = "TALB";
    public static final String FRAME_ID_V3_ALBUM_ARTIST_SORT_ORDER_ITUNES = "TSO2";
    public static final String FRAME_ID_V3_ALBUM_SORT_ORDER_ITUNES = "TSOA";
    public static final String FRAME_ID_V3_ALBUM_SORT_ORDER_MUSICBRAINZ = "XSOA";
    public static final String FRAME_ID_V3_ARTIST = "TPE1";
    public static final String FRAME_ID_V3_ARTIST_SORT_ORDER_ITUNES = "TSOP";
    public static final String FRAME_ID_V3_ARTIST_SORT_ORDER_MUSICBRAINZ = "XSOP";
    public static final String FRAME_ID_V3_ATTACHED_PICTURE = "APIC";
    public static final String FRAME_ID_V3_AUDIO_ENCRYPTION = "AENC";
    public static final String FRAME_ID_V3_BPM = "TBPM";
    public static final String FRAME_ID_V3_COMMENT = "COMM";
    public static final String FRAME_ID_V3_COMMERCIAL_FRAME = "COMR";
    public static final String FRAME_ID_V3_COMPOSER = "TCOM";
    public static final String FRAME_ID_V3_COMPOSER_SORT_ORDER_ITUNES = "TSOC";
    public static final String FRAME_ID_V3_CONDUCTOR = "TPE3";
    public static final String FRAME_ID_V3_CONTENT_GROUP_DESC = "TIT1";
    public static final String FRAME_ID_V3_COPYRIGHTINFO = "TCOP";
    public static final String FRAME_ID_V3_ENCODEDBY = "TENC";
    public static final String FRAME_ID_V3_ENCRYPTION = "ENCR";
    public static final String FRAME_ID_V3_EQUALISATION = "EQUA";
    public static final String FRAME_ID_V3_EVENT_TIMING_CODES = "ETCO";
    public static final String FRAME_ID_V3_FILE_OWNER = "TOWN";
    public static final String FRAME_ID_V3_FILE_TYPE = "TFLT";
    public static final String FRAME_ID_V3_GENERAL_ENCAPS_OBJECT = "GEOB";
    public static final String FRAME_ID_V3_GENRE = "TCON";
    public static final String FRAME_ID_V3_GROUP_ID_REG = "GRID";
    public static final String FRAME_ID_V3_HW_SW_SETTINGS = "TSSE";
    public static final String FRAME_ID_V3_INITIAL_KEY = "TKEY";
    public static final String FRAME_ID_V3_INVOLVED_PEOPLE = "IPLS";
    public static final String FRAME_ID_V3_ISRC = "TSRC";
    public static final String FRAME_ID_V3_IS_COMPILATION = "TCMP";
    public static final String FRAME_ID_V3_ITUNES_GROUPING = "GRP1";
    public static final String FRAME_ID_V3_LANGUAGE = "TLAN";
    public static final String FRAME_ID_V3_LENGTH = "TLEN";
    public static final String FRAME_ID_V3_LINKED_INFO = "LINK";
    public static final String FRAME_ID_V3_LYRICIST = "TEXT";
    public static final String FRAME_ID_V3_MEDIA_TYPE = "TMED";
    public static final String FRAME_ID_V3_MOVEMENT = "MVNM";
    public static final String FRAME_ID_V3_MOVEMENT_NO = "MVIN";
    public static final String FRAME_ID_V3_MPEG_LOCATION_LOOKUP_TABLE = "MLLT";
    public static final String FRAME_ID_V3_MUSIC_CD_ID = "MCDI";
    public static final String FRAME_ID_V3_ORIGARTIST = "TOPE";
    public static final String FRAME_ID_V3_ORIG_FILENAME = "TOFN";
    public static final String FRAME_ID_V3_ORIG_LYRICIST = "TOLY";
    public static final String FRAME_ID_V3_ORIG_TITLE = "TOAL";
    public static final String FRAME_ID_V3_OWNERSHIP = "OWNE";
    public static final String FRAME_ID_V3_PLAYLIST_DELAY = "TDLY";
    public static final String FRAME_ID_V3_PLAY_COUNTER = "PCNT";
    public static final String FRAME_ID_V3_POPULARIMETER = "POPM";
    public static final String FRAME_ID_V3_POSITION_SYNC = "POSS";
    public static final String FRAME_ID_V3_PRIVATE = "PRIV";
    public static final String FRAME_ID_V3_PUBLISHER = "TPUB";
    public static final String FRAME_ID_V3_RADIO_NAME = "TRSN";
    public static final String FRAME_ID_V3_RADIO_OWNER = "TRSO";
    public static final String FRAME_ID_V3_RECOMMENDED_BUFFER_SIZE = "RBUF";
    public static final String FRAME_ID_V3_RELATIVE_VOLUME_ADJUSTMENT = "RVAD";
    public static final String FRAME_ID_V3_REMIXED = "TPE4";
    public static final String FRAME_ID_V3_REVERB = "RVRB";
    public static final String FRAME_ID_V3_SET = "TPOS";
    public static final String FRAME_ID_V3_SET_SUBTITLE = "TSST";
    public static final String FRAME_ID_V3_SYNC_LYRIC = "SYLT";
    public static final String FRAME_ID_V3_SYNC_TEMPO = "SYTC";
    public static final String FRAME_ID_V3_TDAT = "TDAT";
    public static final String FRAME_ID_V3_TERMS_OF_USE = "USER";
    public static final String FRAME_ID_V3_TIME = "TIME";
    public static final String FRAME_ID_V3_TITLE = "TIT2";
    public static final String FRAME_ID_V3_TITLE_REFINEMENT = "TIT3";
    public static final String FRAME_ID_V3_TITLE_SORT_ORDER_ITUNES = "TSOT";
    public static final String FRAME_ID_V3_TITLE_SORT_ORDER_MUSICBRAINZ = "XSOT";
    public static final String FRAME_ID_V3_TORY = "TORY";
    public static final String FRAME_ID_V3_TRACK = "TRCK";
    public static final String FRAME_ID_V3_TRDA = "TRDA";
    public static final String FRAME_ID_V3_TSIZ = "TSIZ";
    public static final String FRAME_ID_V3_TYER = "TYER";
    public static final String FRAME_ID_V3_UNIQUE_FILE_ID = "UFID";
    public static final String FRAME_ID_V3_UNSYNC_LYRICS = "USLT";
    public static final String FRAME_ID_V3_URL_ARTIST_WEB = "WOAR";
    public static final String FRAME_ID_V3_URL_COMMERCIAL = "WCOM";
    public static final String FRAME_ID_V3_URL_COPYRIGHT = "WCOP";
    public static final String FRAME_ID_V3_URL_FILE_WEB = "WOAF";
    public static final String FRAME_ID_V3_URL_OFFICIAL_RADIO = "WORS";
    public static final String FRAME_ID_V3_URL_PAYMENT = "WPAY";
    public static final String FRAME_ID_V3_URL_PUBLISHERS = "WPUB";
    public static final String FRAME_ID_V3_URL_SOURCE_WEB = "WOAS";
    public static final String FRAME_ID_V3_USER_DEFINED_INFO = "TXXX";
    public static final String FRAME_ID_V3_USER_DEFINED_URL = "WXXX";
    private static ID3v23Frames id3v23Frames;
    protected EnumMap<ID3v23FieldKey, FieldKey> id3ToTagField = new EnumMap(ID3v23FieldKey.class);
    protected EnumMap<FieldKey, ID3v23FieldKey> tagFieldToId3 = new EnumMap(FieldKey.class);

    private ID3v23Frames() {
        this.supportedFrames.add((Object)FRAME_ID_V3_ACCOMPANIMENT);
        this.supportedFrames.add((Object)FRAME_ID_V3_ALBUM);
        this.supportedFrames.add((Object)FRAME_ID_V3_ARTIST);
        this.supportedFrames.add((Object)FRAME_ID_V3_ATTACHED_PICTURE);
        this.supportedFrames.add((Object)FRAME_ID_V3_AUDIO_ENCRYPTION);
        this.supportedFrames.add((Object)FRAME_ID_V3_BPM);
        this.supportedFrames.add((Object)FRAME_ID_V3_COMMENT);
        this.supportedFrames.add((Object)FRAME_ID_V3_COMMERCIAL_FRAME);
        this.supportedFrames.add((Object)FRAME_ID_V3_COMPOSER);
        this.supportedFrames.add((Object)FRAME_ID_V3_CONDUCTOR);
        this.supportedFrames.add((Object)FRAME_ID_V3_CONTENT_GROUP_DESC);
        this.supportedFrames.add((Object)FRAME_ID_V3_COPYRIGHTINFO);
        this.supportedFrames.add((Object)FRAME_ID_V3_ENCODEDBY);
        this.supportedFrames.add((Object)FRAME_ID_V3_ENCRYPTION);
        this.supportedFrames.add((Object)FRAME_ID_V3_EQUALISATION);
        this.supportedFrames.add((Object)FRAME_ID_V3_EVENT_TIMING_CODES);
        this.supportedFrames.add((Object)FRAME_ID_V3_FILE_OWNER);
        this.supportedFrames.add((Object)FRAME_ID_V3_FILE_TYPE);
        this.supportedFrames.add((Object)FRAME_ID_V3_GENERAL_ENCAPS_OBJECT);
        this.supportedFrames.add((Object)FRAME_ID_V3_GENRE);
        this.supportedFrames.add((Object)FRAME_ID_V3_GROUP_ID_REG);
        this.supportedFrames.add((Object)FRAME_ID_V3_HW_SW_SETTINGS);
        this.supportedFrames.add((Object)FRAME_ID_V3_INITIAL_KEY);
        this.supportedFrames.add((Object)FRAME_ID_V3_INVOLVED_PEOPLE);
        this.supportedFrames.add((Object)FRAME_ID_V3_ISRC);
        this.supportedFrames.add((Object)FRAME_ID_V3_ITUNES_GROUPING);
        this.supportedFrames.add((Object)FRAME_ID_V3_LANGUAGE);
        this.supportedFrames.add((Object)FRAME_ID_V3_LENGTH);
        this.supportedFrames.add((Object)FRAME_ID_V3_LINKED_INFO);
        this.supportedFrames.add((Object)FRAME_ID_V3_LYRICIST);
        this.supportedFrames.add((Object)FRAME_ID_V3_MEDIA_TYPE);
        this.supportedFrames.add((Object)FRAME_ID_V3_MPEG_LOCATION_LOOKUP_TABLE);
        this.supportedFrames.add((Object)FRAME_ID_V3_MOVEMENT);
        this.supportedFrames.add((Object)FRAME_ID_V3_MOVEMENT_NO);
        this.supportedFrames.add((Object)FRAME_ID_V3_MUSIC_CD_ID);
        this.supportedFrames.add((Object)FRAME_ID_V3_ORIGARTIST);
        this.supportedFrames.add((Object)FRAME_ID_V3_ORIG_FILENAME);
        this.supportedFrames.add((Object)FRAME_ID_V3_ORIG_LYRICIST);
        this.supportedFrames.add((Object)FRAME_ID_V3_ORIG_TITLE);
        this.supportedFrames.add((Object)FRAME_ID_V3_OWNERSHIP);
        this.supportedFrames.add((Object)FRAME_ID_V3_PLAYLIST_DELAY);
        this.supportedFrames.add((Object)FRAME_ID_V3_PLAY_COUNTER);
        this.supportedFrames.add((Object)FRAME_ID_V3_POPULARIMETER);
        this.supportedFrames.add((Object)FRAME_ID_V3_POSITION_SYNC);
        this.supportedFrames.add((Object)FRAME_ID_V3_PRIVATE);
        this.supportedFrames.add((Object)FRAME_ID_V3_PUBLISHER);
        this.supportedFrames.add((Object)FRAME_ID_V3_RADIO_NAME);
        this.supportedFrames.add((Object)FRAME_ID_V3_RADIO_OWNER);
        this.supportedFrames.add((Object)FRAME_ID_V3_RECOMMENDED_BUFFER_SIZE);
        this.supportedFrames.add((Object)FRAME_ID_V3_RELATIVE_VOLUME_ADJUSTMENT);
        this.supportedFrames.add((Object)FRAME_ID_V3_REMIXED);
        this.supportedFrames.add((Object)FRAME_ID_V3_REVERB);
        this.supportedFrames.add((Object)FRAME_ID_V3_SET);
        this.supportedFrames.add((Object)FRAME_ID_V3_SET_SUBTITLE);
        this.supportedFrames.add((Object)FRAME_ID_V3_SYNC_LYRIC);
        this.supportedFrames.add((Object)FRAME_ID_V3_SYNC_TEMPO);
        this.supportedFrames.add((Object)FRAME_ID_V3_TDAT);
        this.supportedFrames.add((Object)FRAME_ID_V3_TERMS_OF_USE);
        this.supportedFrames.add((Object)FRAME_ID_V3_TIME);
        this.supportedFrames.add((Object)FRAME_ID_V3_TITLE);
        this.supportedFrames.add((Object)FRAME_ID_V3_TITLE_REFINEMENT);
        this.supportedFrames.add((Object)FRAME_ID_V3_TORY);
        this.supportedFrames.add((Object)FRAME_ID_V3_TRACK);
        this.supportedFrames.add((Object)FRAME_ID_V3_TRDA);
        this.supportedFrames.add((Object)FRAME_ID_V3_TSIZ);
        this.supportedFrames.add((Object)FRAME_ID_V3_TYER);
        this.supportedFrames.add((Object)FRAME_ID_V3_UNIQUE_FILE_ID);
        this.supportedFrames.add((Object)FRAME_ID_V3_UNSYNC_LYRICS);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_ARTIST_WEB);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_COMMERCIAL);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_COPYRIGHT);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_FILE_WEB);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_OFFICIAL_RADIO);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_PAYMENT);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_PUBLISHERS);
        this.supportedFrames.add((Object)FRAME_ID_V3_URL_SOURCE_WEB);
        this.supportedFrames.add((Object)FRAME_ID_V3_USER_DEFINED_INFO);
        this.supportedFrames.add((Object)FRAME_ID_V3_USER_DEFINED_URL);
        this.extensionFrames.add((Object)FRAME_ID_V3_IS_COMPILATION);
        this.extensionFrames.add((Object)FRAME_ID_V3_TITLE_SORT_ORDER_ITUNES);
        this.extensionFrames.add((Object)FRAME_ID_V3_ARTIST_SORT_ORDER_ITUNES);
        this.extensionFrames.add((Object)FRAME_ID_V3_ALBUM_SORT_ORDER_ITUNES);
        this.extensionFrames.add((Object)FRAME_ID_V3_TITLE_SORT_ORDER_MUSICBRAINZ);
        this.extensionFrames.add((Object)FRAME_ID_V3_ARTIST_SORT_ORDER_MUSICBRAINZ);
        this.extensionFrames.add((Object)FRAME_ID_V3_ALBUM_SORT_ORDER_MUSICBRAINZ);
        this.extensionFrames.add((Object)FRAME_ID_V3_ALBUM_ARTIST_SORT_ORDER_ITUNES);
        this.extensionFrames.add((Object)FRAME_ID_V3_COMPOSER_SORT_ORDER_ITUNES);
        this.commonFrames.add((Object)FRAME_ID_V3_ARTIST);
        this.commonFrames.add((Object)FRAME_ID_V3_ALBUM);
        this.commonFrames.add((Object)FRAME_ID_V3_TITLE);
        this.commonFrames.add((Object)FRAME_ID_V3_GENRE);
        this.commonFrames.add((Object)FRAME_ID_V3_TRACK);
        this.commonFrames.add((Object)FRAME_ID_V3_TYER);
        this.commonFrames.add((Object)FRAME_ID_V3_COMMENT);
        this.binaryFrames.add((Object)FRAME_ID_V3_ATTACHED_PICTURE);
        this.binaryFrames.add((Object)FRAME_ID_V3_AUDIO_ENCRYPTION);
        this.binaryFrames.add((Object)FRAME_ID_V3_ENCRYPTION);
        this.binaryFrames.add((Object)FRAME_ID_V3_EQUALISATION);
        this.binaryFrames.add((Object)FRAME_ID_V3_EVENT_TIMING_CODES);
        this.binaryFrames.add((Object)FRAME_ID_V3_GENERAL_ENCAPS_OBJECT);
        this.binaryFrames.add((Object)FRAME_ID_V3_RELATIVE_VOLUME_ADJUSTMENT);
        this.binaryFrames.add((Object)FRAME_ID_V3_RECOMMENDED_BUFFER_SIZE);
        this.binaryFrames.add((Object)FRAME_ID_V3_UNIQUE_FILE_ID);
        this.idToValue.put((Object)FRAME_ID_V3_ACCOMPANIMENT, (Object)"Text: Band/Orchestra/Accompaniment");
        this.idToValue.put((Object)FRAME_ID_V3_ALBUM, (Object)"Text: Album/Movie/Show title");
        this.idToValue.put((Object)FRAME_ID_V3_ARTIST, (Object)"Text: Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group");
        this.idToValue.put((Object)FRAME_ID_V3_ATTACHED_PICTURE, (Object)"Attached picture");
        this.idToValue.put((Object)FRAME_ID_V3_AUDIO_ENCRYPTION, (Object)"Audio encryption");
        this.idToValue.put((Object)FRAME_ID_V3_BPM, (Object)"Text: BPM (Beats Per Minute)");
        this.idToValue.put((Object)FRAME_ID_V3_COMMENT, (Object)"Comments");
        this.idToValue.put((Object)FRAME_ID_V3_COMMERCIAL_FRAME, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_COMPOSER, (Object)"Text: Composer");
        this.idToValue.put((Object)FRAME_ID_V3_CONDUCTOR, (Object)"Text: Conductor/Performer refinement");
        this.idToValue.put((Object)FRAME_ID_V3_CONTENT_GROUP_DESC, (Object)"Text: Content group description");
        this.idToValue.put((Object)FRAME_ID_V3_COPYRIGHTINFO, (Object)"Text: Copyright message");
        this.idToValue.put((Object)FRAME_ID_V3_ENCODEDBY, (Object)"Text: Encoded by");
        this.idToValue.put((Object)FRAME_ID_V3_ENCRYPTION, (Object)"Encryption method registration");
        this.idToValue.put((Object)FRAME_ID_V3_EQUALISATION, (Object)"Equalization");
        this.idToValue.put((Object)FRAME_ID_V3_EVENT_TIMING_CODES, (Object)"Event timing codes");
        this.idToValue.put((Object)FRAME_ID_V3_FILE_OWNER, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_FILE_TYPE, (Object)"Text: File type");
        this.idToValue.put((Object)FRAME_ID_V3_GENERAL_ENCAPS_OBJECT, (Object)"General encapsulated datatype");
        this.idToValue.put((Object)FRAME_ID_V3_GENRE, (Object)"Text: Content type");
        this.idToValue.put((Object)FRAME_ID_V3_GROUP_ID_REG, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_HW_SW_SETTINGS, (Object)"Text: Software/hardware and settings used for encoding");
        this.idToValue.put((Object)FRAME_ID_V3_INITIAL_KEY, (Object)"Text: Initial key");
        this.idToValue.put((Object)FRAME_ID_V3_INVOLVED_PEOPLE, (Object)"Involved people list");
        this.idToValue.put((Object)FRAME_ID_V3_ISRC, (Object)"Text: ISRC (International Standard Recording Code)");
        this.idToValue.put((Object)FRAME_ID_V3_ITUNES_GROUPING, (Object)"Text: iTunes Grouping");
        this.idToValue.put((Object)FRAME_ID_V3_LANGUAGE, (Object)"Text: Language(s)");
        this.idToValue.put((Object)FRAME_ID_V3_LENGTH, (Object)"Text: Length");
        this.idToValue.put((Object)FRAME_ID_V3_LINKED_INFO, (Object)"Linked information");
        this.idToValue.put((Object)FRAME_ID_V3_LYRICIST, (Object)"Text: Lyricist/text writer");
        this.idToValue.put((Object)FRAME_ID_V3_MEDIA_TYPE, (Object)"Text: Media type");
        this.idToValue.put((Object)FRAME_ID_V3_MOVEMENT, (Object)"Text: Movement");
        this.idToValue.put((Object)FRAME_ID_V3_MOVEMENT_NO, (Object)"Text: Movement No");
        this.idToValue.put((Object)FRAME_ID_V3_MPEG_LOCATION_LOOKUP_TABLE, (Object)"MPEG location lookup table");
        this.idToValue.put((Object)FRAME_ID_V3_MUSIC_CD_ID, (Object)"Music CD Identifier");
        this.idToValue.put((Object)FRAME_ID_V3_ORIGARTIST, (Object)"Text: Original artist(s)/performer(s)");
        this.idToValue.put((Object)FRAME_ID_V3_ORIG_FILENAME, (Object)"Text: Original filename");
        this.idToValue.put((Object)FRAME_ID_V3_ORIG_LYRICIST, (Object)"Text: Original Lyricist(s)/text writer(s)");
        this.idToValue.put((Object)FRAME_ID_V3_ORIG_TITLE, (Object)"Text: Original album/Movie/Show title");
        this.idToValue.put((Object)FRAME_ID_V3_OWNERSHIP, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_PLAYLIST_DELAY, (Object)"Text: Playlist delay");
        this.idToValue.put((Object)FRAME_ID_V3_PLAY_COUNTER, (Object)"Play counter");
        this.idToValue.put((Object)FRAME_ID_V3_POPULARIMETER, (Object)"Popularimeter");
        this.idToValue.put((Object)FRAME_ID_V3_POSITION_SYNC, (Object)"Position Sync");
        this.idToValue.put((Object)FRAME_ID_V3_PRIVATE, (Object)"Private frame");
        this.idToValue.put((Object)FRAME_ID_V3_PUBLISHER, (Object)"Text: Publisher");
        this.idToValue.put((Object)FRAME_ID_V3_RADIO_NAME, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_RADIO_OWNER, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_RECOMMENDED_BUFFER_SIZE, (Object)"Recommended buffer size");
        this.idToValue.put((Object)FRAME_ID_V3_RELATIVE_VOLUME_ADJUSTMENT, (Object)"Relative volume adjustment");
        this.idToValue.put((Object)FRAME_ID_V3_REMIXED, (Object)"Text: Interpreted, remixed, or otherwise modified by");
        this.idToValue.put((Object)FRAME_ID_V3_REVERB, (Object)"Reverb");
        this.idToValue.put((Object)FRAME_ID_V3_SET, (Object)"Text: Part of a setField");
        this.idToValue.put((Object)FRAME_ID_V3_SET_SUBTITLE, (Object)"Text: SubTitle");
        this.idToValue.put((Object)FRAME_ID_V3_SYNC_LYRIC, (Object)"Synchronized lyric/text");
        this.idToValue.put((Object)FRAME_ID_V3_SYNC_TEMPO, (Object)"Synced tempo codes");
        this.idToValue.put((Object)FRAME_ID_V3_TDAT, (Object)"Text: Date");
        this.idToValue.put((Object)FRAME_ID_V3_TERMS_OF_USE, (Object)"");
        this.idToValue.put((Object)FRAME_ID_V3_TIME, (Object)"Text: Time");
        this.idToValue.put((Object)FRAME_ID_V3_TITLE, (Object)"Text: Title/Songname/Content description");
        this.idToValue.put((Object)FRAME_ID_V3_TITLE_REFINEMENT, (Object)"Text: Subtitle/Description refinement");
        this.idToValue.put((Object)FRAME_ID_V3_TORY, (Object)"Text: Original release year");
        this.idToValue.put((Object)FRAME_ID_V3_TRACK, (Object)"Text: Track number/Position in setField");
        this.idToValue.put((Object)FRAME_ID_V3_TRDA, (Object)"Text: Recording dates");
        this.idToValue.put((Object)FRAME_ID_V3_TSIZ, (Object)"Text: Size");
        this.idToValue.put((Object)FRAME_ID_V3_TYER, (Object)"Text: Year");
        this.idToValue.put((Object)FRAME_ID_V3_UNIQUE_FILE_ID, (Object)"Unique file identifier");
        this.idToValue.put((Object)FRAME_ID_V3_UNSYNC_LYRICS, (Object)"Unsychronized lyric/text transcription");
        this.idToValue.put((Object)FRAME_ID_V3_URL_ARTIST_WEB, (Object)"URL: Official artist/performer webpage");
        this.idToValue.put((Object)FRAME_ID_V3_URL_COMMERCIAL, (Object)"URL: Commercial information");
        this.idToValue.put((Object)FRAME_ID_V3_URL_COPYRIGHT, (Object)"URL: Copyright/Legal information");
        this.idToValue.put((Object)FRAME_ID_V3_URL_FILE_WEB, (Object)"URL: Official audio file webpage");
        this.idToValue.put((Object)FRAME_ID_V3_URL_OFFICIAL_RADIO, (Object)"Official Radio");
        this.idToValue.put((Object)FRAME_ID_V3_URL_PAYMENT, (Object)"URL: Payment");
        this.idToValue.put((Object)FRAME_ID_V3_URL_PUBLISHERS, (Object)"URL: Publishers official webpage");
        this.idToValue.put((Object)FRAME_ID_V3_URL_SOURCE_WEB, (Object)"URL: Official audio source webpage");
        this.idToValue.put((Object)FRAME_ID_V3_USER_DEFINED_INFO, (Object)"User defined text information frame");
        this.idToValue.put((Object)FRAME_ID_V3_USER_DEFINED_URL, (Object)"User defined URL link frame");
        this.idToValue.put((Object)FRAME_ID_V3_IS_COMPILATION, (Object)"Is Compilation");
        this.idToValue.put((Object)FRAME_ID_V3_TITLE_SORT_ORDER_ITUNES, (Object)"Text: title sort order");
        this.idToValue.put((Object)FRAME_ID_V3_ARTIST_SORT_ORDER_ITUNES, (Object)"Text: artist sort order");
        this.idToValue.put((Object)FRAME_ID_V3_ALBUM_SORT_ORDER_ITUNES, (Object)"Text: album sort order");
        this.idToValue.put((Object)FRAME_ID_V3_TITLE_SORT_ORDER_MUSICBRAINZ, (Object)"Text: title sort order");
        this.idToValue.put((Object)FRAME_ID_V3_ARTIST_SORT_ORDER_MUSICBRAINZ, (Object)"Text: artist sort order");
        this.idToValue.put((Object)FRAME_ID_V3_ALBUM_SORT_ORDER_MUSICBRAINZ, (Object)"Text: album sort order");
        this.idToValue.put((Object)FRAME_ID_V3_ALBUM_ARTIST_SORT_ORDER_ITUNES, (Object)"Text:Album Artist Sort Order Frame");
        this.idToValue.put((Object)FRAME_ID_V3_COMPOSER_SORT_ORDER_ITUNES, (Object)"Text:Composer Sort Order Frame");
        this.createMaps();
        this.multipleFrames.add((Object)FRAME_ID_V3_USER_DEFINED_INFO);
        this.multipleFrames.add((Object)FRAME_ID_V3_USER_DEFINED_URL);
        this.multipleFrames.add((Object)FRAME_ID_V3_ATTACHED_PICTURE);
        this.multipleFrames.add((Object)FRAME_ID_V3_PRIVATE);
        this.multipleFrames.add((Object)FRAME_ID_V3_COMMENT);
        this.multipleFrames.add((Object)FRAME_ID_V3_UNIQUE_FILE_ID);
        this.multipleFrames.add((Object)FRAME_ID_V3_UNSYNC_LYRICS);
        this.multipleFrames.add((Object)FRAME_ID_V3_POPULARIMETER);
        this.multipleFrames.add((Object)FRAME_ID_V3_GENERAL_ENCAPS_OBJECT);
        this.multipleFrames.add((Object)FRAME_ID_V3_URL_ARTIST_WEB);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_EVENT_TIMING_CODES);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_EQUALISATION);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_MPEG_LOCATION_LOOKUP_TABLE);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_POSITION_SYNC);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_SYNC_LYRIC);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_SYNC_TEMPO);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_RELATIVE_VOLUME_ADJUSTMENT);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_EVENT_TIMING_CODES);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_ENCODEDBY);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_LENGTH);
        this.discardIfFileAlteredFrames.add((Object)FRAME_ID_V3_TSIZ);
        this.tagFieldToId3.put((Enum)FieldKey.ACOUSTID_FINGERPRINT, (Object)ID3v23FieldKey.ACOUSTID_FINGERPRINT);
        this.tagFieldToId3.put((Enum)FieldKey.ACOUSTID_ID, (Object)ID3v23FieldKey.ACOUSTID_ID);
        this.tagFieldToId3.put((Enum)FieldKey.ALBUM, (Object)ID3v23FieldKey.ALBUM);
        this.tagFieldToId3.put((Enum)FieldKey.ALBUM_ARTIST, (Object)ID3v23FieldKey.ALBUM_ARTIST);
        this.tagFieldToId3.put((Enum)FieldKey.ALBUM_ARTIST_SORT, (Object)ID3v23FieldKey.ALBUM_ARTIST_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.ALBUM_ARTISTS, (Object)ID3v23FieldKey.ALBUM_ARTISTS);
        this.tagFieldToId3.put((Enum)FieldKey.ALBUM_ARTISTS_SORT, (Object)ID3v23FieldKey.ALBUM_ARTISTS_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.ALBUM_SORT, (Object)ID3v23FieldKey.ALBUM_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.AMAZON_ID, (Object)ID3v23FieldKey.AMAZON_ID);
        this.tagFieldToId3.put((Enum)FieldKey.ARRANGER, (Object)ID3v23FieldKey.ARRANGER);
        this.tagFieldToId3.put((Enum)FieldKey.ARRANGER_SORT, (Object)ID3v23FieldKey.ARRANGER_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.ARTIST, (Object)ID3v23FieldKey.ARTIST);
        this.tagFieldToId3.put((Enum)FieldKey.ARTISTS, (Object)ID3v23FieldKey.ARTISTS);
        this.tagFieldToId3.put((Enum)FieldKey.ARTISTS_SORT, (Object)ID3v23FieldKey.ARTISTS_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.ARTIST_SORT, (Object)ID3v23FieldKey.ARTIST_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.BARCODE, (Object)ID3v23FieldKey.BARCODE);
        this.tagFieldToId3.put((Enum)FieldKey.BPM, (Object)ID3v23FieldKey.BPM);
        this.tagFieldToId3.put((Enum)FieldKey.CATALOG_NO, (Object)ID3v23FieldKey.CATALOG_NO);
        this.tagFieldToId3.put((Enum)FieldKey.CHOIR, (Object)ID3v23FieldKey.CHOIR);
        this.tagFieldToId3.put((Enum)FieldKey.CHOIR_SORT, (Object)ID3v23FieldKey.CHOIR_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.CLASSICAL_CATALOG, (Object)ID3v23FieldKey.CLASSICAL_CATALOG);
        this.tagFieldToId3.put((Enum)FieldKey.CLASSICAL_NICKNAME, (Object)ID3v23FieldKey.CLASSICAL_NICKNAME);
        this.tagFieldToId3.put((Enum)FieldKey.COMMENT, (Object)ID3v23FieldKey.COMMENT);
        this.tagFieldToId3.put((Enum)FieldKey.COMPOSER, (Object)ID3v23FieldKey.COMPOSER);
        this.tagFieldToId3.put((Enum)FieldKey.COMPOSER_SORT, (Object)ID3v23FieldKey.COMPOSER_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.CONDUCTOR, (Object)ID3v23FieldKey.CONDUCTOR);
        this.tagFieldToId3.put((Enum)FieldKey.CONDUCTOR_SORT, (Object)ID3v23FieldKey.CONDUCTOR_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.COPYRIGHT, (Object)ID3v23FieldKey.COPYRIGHT);
        this.tagFieldToId3.put((Enum)FieldKey.COUNTRY, (Object)ID3v23FieldKey.COUNTRY);
        this.tagFieldToId3.put((Enum)FieldKey.COVER_ART, (Object)ID3v23FieldKey.COVER_ART);
        this.tagFieldToId3.put((Enum)FieldKey.CUSTOM1, (Object)ID3v23FieldKey.CUSTOM1);
        this.tagFieldToId3.put((Enum)FieldKey.CUSTOM2, (Object)ID3v23FieldKey.CUSTOM2);
        this.tagFieldToId3.put((Enum)FieldKey.CUSTOM3, (Object)ID3v23FieldKey.CUSTOM3);
        this.tagFieldToId3.put((Enum)FieldKey.CUSTOM4, (Object)ID3v23FieldKey.CUSTOM4);
        this.tagFieldToId3.put((Enum)FieldKey.CUSTOM5, (Object)ID3v23FieldKey.CUSTOM5);
        EnumMap<FieldKey, ID3v23FieldKey> enumMap = this.tagFieldToId3;
        FieldKey fieldKey = FieldKey.DISC_NO;
        ID3v23FieldKey iD3v23FieldKey = ID3v23FieldKey.DISC_NO;
        enumMap.put((Enum)fieldKey, (Object)iD3v23FieldKey);
        this.tagFieldToId3.put((Enum)FieldKey.DISC_SUBTITLE, (Object)ID3v23FieldKey.DISC_SUBTITLE);
        this.tagFieldToId3.put((Enum)FieldKey.DISC_TOTAL, (Object)iD3v23FieldKey);
        this.tagFieldToId3.put((Enum)FieldKey.DJMIXER, (Object)ID3v23FieldKey.DJMIXER);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_ELECTRONIC, (Object)ID3v23FieldKey.MOOD_ELECTRONIC);
        this.tagFieldToId3.put((Enum)FieldKey.ENCODER, (Object)ID3v23FieldKey.ENCODER);
        this.tagFieldToId3.put((Enum)FieldKey.ENGINEER, (Object)ID3v23FieldKey.ENGINEER);
        this.tagFieldToId3.put((Enum)FieldKey.ENSEMBLE, (Object)ID3v23FieldKey.ENSEMBLE);
        this.tagFieldToId3.put((Enum)FieldKey.ENSEMBLE_SORT, (Object)ID3v23FieldKey.ENSEMBLE_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.FBPM, (Object)ID3v23FieldKey.FBPM);
        this.tagFieldToId3.put((Enum)FieldKey.GENRE, (Object)ID3v23FieldKey.GENRE);
        this.tagFieldToId3.put((Enum)FieldKey.GROUP, (Object)ID3v23FieldKey.GROUP);
        this.tagFieldToId3.put((Enum)FieldKey.GROUPING, (Object)ID3v23FieldKey.GROUPING);
        this.tagFieldToId3.put((Enum)FieldKey.INSTRUMENT, (Object)ID3v23FieldKey.INSTRUMENT);
        this.tagFieldToId3.put((Enum)FieldKey.INVOLVED_PERSON, (Object)ID3v23FieldKey.INVOLVED_PERSON);
        this.tagFieldToId3.put((Enum)FieldKey.ISRC, (Object)ID3v23FieldKey.ISRC);
        this.tagFieldToId3.put((Enum)FieldKey.IS_CLASSICAL, (Object)ID3v23FieldKey.IS_CLASSICAL);
        this.tagFieldToId3.put((Enum)FieldKey.IS_COMPILATION, (Object)ID3v23FieldKey.IS_COMPILATION);
        this.tagFieldToId3.put((Enum)FieldKey.IS_SOUNDTRACK, (Object)ID3v23FieldKey.IS_SOUNDTRACK);
        this.tagFieldToId3.put((Enum)FieldKey.ITUNES_GROUPING, (Object)ID3v23FieldKey.ITUNES_GROUPING);
        this.tagFieldToId3.put((Enum)FieldKey.KEY, (Object)ID3v23FieldKey.KEY);
        this.tagFieldToId3.put((Enum)FieldKey.LANGUAGE, (Object)ID3v23FieldKey.LANGUAGE);
        this.tagFieldToId3.put((Enum)FieldKey.LYRICIST, (Object)ID3v23FieldKey.LYRICIST);
        this.tagFieldToId3.put((Enum)FieldKey.LYRICS, (Object)ID3v23FieldKey.LYRICS);
        this.tagFieldToId3.put((Enum)FieldKey.MEDIA, (Object)ID3v23FieldKey.MEDIA);
        this.tagFieldToId3.put((Enum)FieldKey.MIXER, (Object)ID3v23FieldKey.MIXER);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD, (Object)ID3v23FieldKey.MOOD);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_ACOUSTIC, (Object)ID3v23FieldKey.MOOD_ACOUSTIC);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_AGGRESSIVE, (Object)ID3v23FieldKey.MOOD_AGGRESSIVE);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_AROUSAL, (Object)ID3v23FieldKey.MOOD_AROUSAL);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_DANCEABILITY, (Object)ID3v23FieldKey.MOOD_DANCEABILITY);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_HAPPY, (Object)ID3v23FieldKey.MOOD_HAPPY);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_INSTRUMENTAL, (Object)ID3v23FieldKey.MOOD_INSTRUMENTAL);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_PARTY, (Object)ID3v23FieldKey.MOOD_PARTY);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_RELAXED, (Object)ID3v23FieldKey.MOOD_RELAXED);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_SAD, (Object)ID3v23FieldKey.MOOD_SAD);
        this.tagFieldToId3.put((Enum)FieldKey.MOOD_VALENCE, (Object)ID3v23FieldKey.MOOD_VALENCE);
        this.tagFieldToId3.put((Enum)FieldKey.MOVEMENT, (Object)ID3v23FieldKey.MOVEMENT);
        this.tagFieldToId3.put((Enum)FieldKey.MOVEMENT_NO, (Object)ID3v23FieldKey.MOVEMENT_NO);
        this.tagFieldToId3.put((Enum)FieldKey.MOVEMENT_TOTAL, (Object)ID3v23FieldKey.MOVEMENT_TOTAL);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_ARTISTID, (Object)ID3v23FieldKey.MUSICBRAINZ_ARTISTID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_DISC_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_DISC_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_ORIGINAL_RELEASE_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_ORIGINAL_RELEASEID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASEARTISTID, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASEARTISTID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASEID, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASEID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASE_COUNTRY, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASE_COUNTRY);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASE_GROUP_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASE_GROUP_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASE_STATUS, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASE_STATUS);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASE_TRACK_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASE_TRACK_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_RELEASE_TYPE, (Object)ID3v23FieldKey.MUSICBRAINZ_RELEASE_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_TRACK_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_TRACK_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_COMPOSITION_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_COMPOSITION_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL1_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_PART_LEVEL1_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL2_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_PART_LEVEL2_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL3_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_PART_LEVEL3_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL4_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_PART_LEVEL4_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL5_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_PART_LEVEL5_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL6_ID, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_PART_LEVEL6_ID);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICIP_ID, (Object)ID3v23FieldKey.MUSICIP_ID);
        this.tagFieldToId3.put((Enum)FieldKey.OCCASION, (Object)ID3v23FieldKey.OCCASION);
        this.tagFieldToId3.put((Enum)FieldKey.OPUS, (Object)ID3v23FieldKey.OPUS);
        this.tagFieldToId3.put((Enum)FieldKey.ORCHESTRA, (Object)ID3v23FieldKey.ORCHESTRA);
        this.tagFieldToId3.put((Enum)FieldKey.ORCHESTRA_SORT, (Object)ID3v23FieldKey.ORCHESTRA_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.ORIGINAL_ALBUM, (Object)ID3v23FieldKey.ORIGINAL_ALBUM);
        this.tagFieldToId3.put((Enum)FieldKey.ORIGINAL_ARTIST, (Object)ID3v23FieldKey.ORIGINAL_ARTIST);
        this.tagFieldToId3.put((Enum)FieldKey.ORIGINAL_LYRICIST, (Object)ID3v23FieldKey.ORIGINAL_LYRICIST);
        this.tagFieldToId3.put((Enum)FieldKey.ORIGINAL_YEAR, (Object)ID3v23FieldKey.ORIGINAL_YEAR);
        this.tagFieldToId3.put((Enum)FieldKey.PART, (Object)ID3v23FieldKey.PART);
        this.tagFieldToId3.put((Enum)FieldKey.PART_NUMBER, (Object)ID3v23FieldKey.PART_NUMBER);
        this.tagFieldToId3.put((Enum)FieldKey.PART_TYPE, (Object)ID3v23FieldKey.PART_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.PERFORMER, (Object)ID3v23FieldKey.PERFORMER);
        this.tagFieldToId3.put((Enum)FieldKey.PERFORMER_NAME, (Object)ID3v23FieldKey.PERFORMER_NAME);
        this.tagFieldToId3.put((Enum)FieldKey.PERFORMER_NAME_SORT, (Object)ID3v23FieldKey.PERFORMER_NAME_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.PERIOD, (Object)ID3v23FieldKey.PERIOD);
        this.tagFieldToId3.put((Enum)FieldKey.PRODUCER, (Object)ID3v23FieldKey.PRODUCER);
        this.tagFieldToId3.put((Enum)FieldKey.QUALITY, (Object)ID3v23FieldKey.QUALITY);
        this.tagFieldToId3.put((Enum)FieldKey.RANKING, (Object)ID3v23FieldKey.RANKING);
        this.tagFieldToId3.put((Enum)FieldKey.RATING, (Object)ID3v23FieldKey.RATING);
        this.tagFieldToId3.put((Enum)FieldKey.RECORD_LABEL, (Object)ID3v23FieldKey.RECORD_LABEL);
        this.tagFieldToId3.put((Enum)FieldKey.REMIXER, (Object)ID3v23FieldKey.REMIXER);
        this.tagFieldToId3.put((Enum)FieldKey.SCRIPT, (Object)ID3v23FieldKey.SCRIPT);
        this.tagFieldToId3.put((Enum)FieldKey.SINGLE_DISC_TRACK_NO, (Object)ID3v23FieldKey.SINGLE_DISC_TRACK_NO);
        this.tagFieldToId3.put((Enum)FieldKey.SUBTITLE, (Object)ID3v23FieldKey.SUBTITLE);
        this.tagFieldToId3.put((Enum)FieldKey.TAGS, (Object)ID3v23FieldKey.TAGS);
        this.tagFieldToId3.put((Enum)FieldKey.TEMPO, (Object)ID3v23FieldKey.TEMPO);
        this.tagFieldToId3.put((Enum)FieldKey.TIMBRE, (Object)ID3v23FieldKey.TIMBRE);
        this.tagFieldToId3.put((Enum)FieldKey.TITLE, (Object)ID3v23FieldKey.TITLE);
        this.tagFieldToId3.put((Enum)FieldKey.TITLE_MOVEMENT, (Object)ID3v23FieldKey.TITLE_MOVEMENT);
        this.tagFieldToId3.put((Enum)FieldKey.TITLE_SORT, (Object)ID3v23FieldKey.TITLE_SORT);
        this.tagFieldToId3.put((Enum)FieldKey.TONALITY, (Object)ID3v23FieldKey.TONALITY);
        this.tagFieldToId3.put((Enum)FieldKey.TRACK, (Object)ID3v23FieldKey.TRACK);
        this.tagFieldToId3.put((Enum)FieldKey.TRACK_TOTAL, (Object)ID3v23FieldKey.TRACK_TOTAL);
        this.tagFieldToId3.put((Enum)FieldKey.URL_DISCOGS_ARTIST_SITE, (Object)ID3v23FieldKey.URL_DISCOGS_ARTIST_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.URL_DISCOGS_RELEASE_SITE, (Object)ID3v23FieldKey.URL_DISCOGS_RELEASE_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.URL_LYRICS_SITE, (Object)ID3v23FieldKey.URL_LYRICS_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.URL_OFFICIAL_ARTIST_SITE, (Object)ID3v23FieldKey.URL_OFFICIAL_ARTIST_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.URL_OFFICIAL_RELEASE_SITE, (Object)ID3v23FieldKey.URL_OFFICIAL_RELEASE_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.URL_WIKIPEDIA_ARTIST_SITE, (Object)ID3v23FieldKey.URL_WIKIPEDIA_ARTIST_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.URL_WIKIPEDIA_RELEASE_SITE, (Object)ID3v23FieldKey.URL_WIKIPEDIA_RELEASE_SITE);
        this.tagFieldToId3.put((Enum)FieldKey.WORK, (Object)ID3v23FieldKey.WORK);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_COMPOSITION, (Object)ID3v23FieldKey.MUSICBRAINZ_WORK_COMPOSITION);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL1, (Object)ID3v23FieldKey.WORK_PART_LEVEL1);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL1_TYPE, (Object)ID3v23FieldKey.WORK_PART_LEVEL1_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL2, (Object)ID3v23FieldKey.WORK_PART_LEVEL2);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL2_TYPE, (Object)ID3v23FieldKey.WORK_PART_LEVEL2_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL3, (Object)ID3v23FieldKey.WORK_PART_LEVEL3);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL3_TYPE, (Object)ID3v23FieldKey.WORK_PART_LEVEL3_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL4, (Object)ID3v23FieldKey.WORK_PART_LEVEL4);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL4_TYPE, (Object)ID3v23FieldKey.WORK_PART_LEVEL4_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL5, (Object)ID3v23FieldKey.WORK_PART_LEVEL5);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL5_TYPE, (Object)ID3v23FieldKey.WORK_PART_LEVEL5_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL6, (Object)ID3v23FieldKey.WORK_PART_LEVEL6);
        this.tagFieldToId3.put((Enum)FieldKey.MUSICBRAINZ_WORK_PART_LEVEL6_TYPE, (Object)ID3v23FieldKey.WORK_PART_LEVEL6_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.WORK_TYPE, (Object)ID3v23FieldKey.WORK_TYPE);
        this.tagFieldToId3.put((Enum)FieldKey.YEAR, (Object)ID3v23FieldKey.YEAR);
        for (Map.Entry entry : this.tagFieldToId3.entrySet()) {
            this.id3ToTagField.put((Enum)((ID3v23FieldKey)((Object)entry.getValue())), (Object)((FieldKey)((Object)entry.getKey())));
        }
    }

    public static ID3v23Frames getInstanceOf() {
        if (id3v23Frames == null) {
            id3v23Frames = new ID3v23Frames();
        }
        return id3v23Frames;
    }

    public FieldKey getGenericKeyFromId3(ID3v23FieldKey iD3v23FieldKey) {
        return (FieldKey)((Object)this.id3ToTagField.get((Object)iD3v23FieldKey));
    }

    public ID3v23FieldKey getId3KeyFromGenericKey(FieldKey fieldKey) {
        return (ID3v23FieldKey)((Object)this.tagFieldToId3.get((Object)fieldKey));
    }
}

