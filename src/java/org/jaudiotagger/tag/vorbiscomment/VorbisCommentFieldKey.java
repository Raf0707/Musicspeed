/*
 * Decompiled with CFR 0.0.
 * 
 * Could not load the following classes:
 *  java.lang.Enum
 *  java.lang.Object
 *  java.lang.String
 *  java.util.EnumSet
 */
package org.jaudiotagger.tag.vorbiscomment;

import java.util.EnumSet;
import org.jaudiotagger.tag.reference.Tagger;

public final class VorbisCommentFieldKey
extends Enum<VorbisCommentFieldKey> {
    private static final /* synthetic */ VorbisCommentFieldKey[] $VALUES;
    public static final /* enum */ VorbisCommentFieldKey ACOUSTID_FINGERPRINT;
    public static final /* enum */ VorbisCommentFieldKey ACOUSTID_ID;
    public static final /* enum */ VorbisCommentFieldKey ALBUM;
    public static final /* enum */ VorbisCommentFieldKey ALBUMARTIST;
    public static final /* enum */ VorbisCommentFieldKey ALBUMARTISTS;
    public static final /* enum */ VorbisCommentFieldKey ALBUMARTISTSORT;
    public static final /* enum */ VorbisCommentFieldKey ALBUMARTISTSSORT;
    public static final /* enum */ VorbisCommentFieldKey ALBUMARTIST_JRIVER;
    public static final /* enum */ VorbisCommentFieldKey ALBUMSORT;
    public static final /* enum */ VorbisCommentFieldKey ALBUM_ARTIST;
    public static final /* enum */ VorbisCommentFieldKey ARRANGER;
    public static final /* enum */ VorbisCommentFieldKey ARRANGER_SORT;
    public static final /* enum */ VorbisCommentFieldKey ARTIST;
    public static final /* enum */ VorbisCommentFieldKey ARTISTS;
    public static final /* enum */ VorbisCommentFieldKey ARTISTSORT;
    public static final /* enum */ VorbisCommentFieldKey ARTISTS_SORT;
    public static final /* enum */ VorbisCommentFieldKey ASIN;
    public static final /* enum */ VorbisCommentFieldKey BARCODE;
    public static final /* enum */ VorbisCommentFieldKey BPM;
    public static final /* enum */ VorbisCommentFieldKey CATALOGNUMBER;
    public static final /* enum */ VorbisCommentFieldKey CHOIR;
    public static final /* enum */ VorbisCommentFieldKey CHOIR_SORT;
    public static final /* enum */ VorbisCommentFieldKey CLASSICAL_CATALOG;
    public static final /* enum */ VorbisCommentFieldKey CLASSICAL_NICKNAME;
    public static final /* enum */ VorbisCommentFieldKey COMMENT;
    public static final /* enum */ VorbisCommentFieldKey COMPILATION;
    public static final /* enum */ VorbisCommentFieldKey COMPOSER;
    public static final /* enum */ VorbisCommentFieldKey COMPOSERSORT;
    public static final /* enum */ VorbisCommentFieldKey CONDUCTOR;
    public static final /* enum */ VorbisCommentFieldKey CONDUCTOR_SORT;
    public static final /* enum */ VorbisCommentFieldKey CONTACT;
    public static final /* enum */ VorbisCommentFieldKey COPYRIGHT;
    public static final /* enum */ VorbisCommentFieldKey COUNTRY;
    public static final /* enum */ VorbisCommentFieldKey COVERART;
    public static final /* enum */ VorbisCommentFieldKey COVERARTMIME;
    public static final /* enum */ VorbisCommentFieldKey CUSTOM1;
    public static final /* enum */ VorbisCommentFieldKey CUSTOM2;
    public static final /* enum */ VorbisCommentFieldKey CUSTOM3;
    public static final /* enum */ VorbisCommentFieldKey CUSTOM4;
    public static final /* enum */ VorbisCommentFieldKey CUSTOM5;
    public static final /* enum */ VorbisCommentFieldKey DATE;
    public static final /* enum */ VorbisCommentFieldKey DESCRIPTION;
    public static final /* enum */ VorbisCommentFieldKey DISCNUMBER;
    public static final /* enum */ VorbisCommentFieldKey DISCSUBTITLE;
    public static final /* enum */ VorbisCommentFieldKey DISCTOTAL;
    public static final /* enum */ VorbisCommentFieldKey DJMIXER;
    public static final /* enum */ VorbisCommentFieldKey ENCODEDBY;
    public static final /* enum */ VorbisCommentFieldKey ENCODER;
    public static final /* enum */ VorbisCommentFieldKey ENGINEER;
    public static final /* enum */ VorbisCommentFieldKey ENSEMBLE;
    public static final /* enum */ VorbisCommentFieldKey ENSEMBLE_SORT;
    public static final /* enum */ VorbisCommentFieldKey FBPM;
    public static final /* enum */ VorbisCommentFieldKey GENRE;
    public static final /* enum */ VorbisCommentFieldKey GROUP;
    public static final /* enum */ VorbisCommentFieldKey GROUPING;
    public static final /* enum */ VorbisCommentFieldKey INSTRUMENT;
    public static final /* enum */ VorbisCommentFieldKey INVOLVED_PERSON;
    public static final /* enum */ VorbisCommentFieldKey ISRC;
    public static final /* enum */ VorbisCommentFieldKey IS_CLASSICAL;
    public static final /* enum */ VorbisCommentFieldKey IS_SOUNDTRACK;
    public static final /* enum */ VorbisCommentFieldKey KEY;
    public static final /* enum */ VorbisCommentFieldKey LABEL;
    public static final /* enum */ VorbisCommentFieldKey LANGUAGE;
    public static final /* enum */ VorbisCommentFieldKey LICENSE;
    public static final /* enum */ VorbisCommentFieldKey LOCATION;
    public static final /* enum */ VorbisCommentFieldKey LYRICIST;
    public static final /* enum */ VorbisCommentFieldKey LYRICS;
    public static final /* enum */ VorbisCommentFieldKey MEDIA;
    public static final /* enum */ VorbisCommentFieldKey METADATA_BLOCK_PICTURE;
    public static final /* enum */ VorbisCommentFieldKey MIXER;
    public static final /* enum */ VorbisCommentFieldKey MOOD;
    public static final /* enum */ VorbisCommentFieldKey MOOD_ACOUSTIC;
    public static final /* enum */ VorbisCommentFieldKey MOOD_AGGRESSIVE;
    public static final /* enum */ VorbisCommentFieldKey MOOD_AROUSAL;
    public static final /* enum */ VorbisCommentFieldKey MOOD_DANCEABILITY;
    public static final /* enum */ VorbisCommentFieldKey MOOD_ELECTRONIC;
    public static final /* enum */ VorbisCommentFieldKey MOOD_HAPPY;
    public static final /* enum */ VorbisCommentFieldKey MOOD_INSTRUMENTAL;
    public static final /* enum */ VorbisCommentFieldKey MOOD_PARTY;
    public static final /* enum */ VorbisCommentFieldKey MOOD_RELAXED;
    public static final /* enum */ VorbisCommentFieldKey MOOD_SAD;
    public static final /* enum */ VorbisCommentFieldKey MOOD_VALENCE;
    public static final /* enum */ VorbisCommentFieldKey MOVEMENT;
    public static final /* enum */ VorbisCommentFieldKey MOVEMENT_NO;
    public static final /* enum */ VorbisCommentFieldKey MOVEMENT_TOTAL;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_ALBUMARTISTID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_ALBUMID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_ALBUMSTATUS;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_ALBUMTYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_ARTISTID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_DISCID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_ORIGINAL_ALBUMID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_RELEASEGROUPID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_RELEASETRACKID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_TRACKID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORKID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_COMPOSITION;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_COMPOSITION_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL1;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL1_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL1_TYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL2;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL2_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL2_TYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL3;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL3_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL3_TYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL4;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL4_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL4_TYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL5;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL5_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL5_TYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL6;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL6_ID;
    public static final /* enum */ VorbisCommentFieldKey MUSICBRAINZ_WORK_PART_LEVEL6_TYPE;
    public static final /* enum */ VorbisCommentFieldKey MUSICIAN;
    public static final /* enum */ VorbisCommentFieldKey MUSICIP_PUID;
    public static final /* enum */ VorbisCommentFieldKey OCCASION;
    public static final /* enum */ VorbisCommentFieldKey OPUS;
    public static final /* enum */ VorbisCommentFieldKey ORCHESTRA;
    public static final /* enum */ VorbisCommentFieldKey ORCHESTRA_SORT;
    public static final /* enum */ VorbisCommentFieldKey ORGANIZATION;
    public static final /* enum */ VorbisCommentFieldKey ORIGINAL_ALBUM;
    public static final /* enum */ VorbisCommentFieldKey ORIGINAL_ARTIST;
    public static final /* enum */ VorbisCommentFieldKey ORIGINAL_LYRICIST;
    public static final /* enum */ VorbisCommentFieldKey ORIGINAL_YEAR;
    public static final /* enum */ VorbisCommentFieldKey PART;
    public static final /* enum */ VorbisCommentFieldKey PART_NUMBER;
    public static final /* enum */ VorbisCommentFieldKey PART_TYPE;
    public static final /* enum */ VorbisCommentFieldKey PERFORMER;
    public static final /* enum */ VorbisCommentFieldKey PERFORMER_NAME;
    public static final /* enum */ VorbisCommentFieldKey PERFORMER_NAME_SORT;
    public static final /* enum */ VorbisCommentFieldKey PERIOD;
    public static final /* enum */ VorbisCommentFieldKey PRODUCER;
    public static final /* enum */ VorbisCommentFieldKey PRODUCTNUMBER;
    public static final /* enum */ VorbisCommentFieldKey QUALITY;
    public static final /* enum */ VorbisCommentFieldKey RANKING;
    public static final /* enum */ VorbisCommentFieldKey RATING;
    public static final /* enum */ VorbisCommentFieldKey RELEASECOUNTRY;
    public static final /* enum */ VorbisCommentFieldKey REMIXER;
    public static final /* enum */ VorbisCommentFieldKey SCRIPT;
    public static final /* enum */ VorbisCommentFieldKey SINGLE_DISC_TRACK_NO;
    public static final /* enum */ VorbisCommentFieldKey SOURCEMEDIA;
    public static final /* enum */ VorbisCommentFieldKey SUBTITLE;
    public static final /* enum */ VorbisCommentFieldKey TAGS;
    public static final /* enum */ VorbisCommentFieldKey TEMPO;
    public static final /* enum */ VorbisCommentFieldKey TIMBRE;
    public static final /* enum */ VorbisCommentFieldKey TITLE;
    public static final /* enum */ VorbisCommentFieldKey TITLESORT;
    public static final /* enum */ VorbisCommentFieldKey TITLE_MOVEMENT;
    public static final /* enum */ VorbisCommentFieldKey TONALITY;
    public static final /* enum */ VorbisCommentFieldKey TRACKNUMBER;
    public static final /* enum */ VorbisCommentFieldKey TRACKTOTAL;
    public static final /* enum */ VorbisCommentFieldKey URL_DISCOGS_ARTIST_SITE;
    public static final /* enum */ VorbisCommentFieldKey URL_DISCOGS_RELEASE_SITE;
    public static final /* enum */ VorbisCommentFieldKey URL_LYRICS_SITE;
    public static final /* enum */ VorbisCommentFieldKey URL_OFFICIAL_ARTIST_SITE;
    public static final /* enum */ VorbisCommentFieldKey URL_OFFICIAL_RELEASE_SITE;
    public static final /* enum */ VorbisCommentFieldKey URL_WIKIPEDIA_ARTIST_SITE;
    public static final /* enum */ VorbisCommentFieldKey URL_WIKIPEDIA_RELEASE_SITE;
    public static final /* enum */ VorbisCommentFieldKey VENDOR;
    public static final /* enum */ VorbisCommentFieldKey VERSION;
    public static final /* enum */ VorbisCommentFieldKey WORK;
    public static final /* enum */ VorbisCommentFieldKey WORK_TYPE;
    private String fieldName;
    private EnumSet<Tagger> taggers;

    static {
        Tagger tagger = Tagger.PICARD;
        ACOUSTID_FINGERPRINT = new VorbisCommentFieldKey("ACOUSTID_FINGERPRINT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger));
        ACOUSTID_ID = new VorbisCommentFieldKey("ACOUSTID_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger));
        Tagger tagger2 = Tagger.XIPH;
        Tagger tagger3 = Tagger.JAIKOZ;
        ALBUM = new VorbisCommentFieldKey("ALBUM", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2, (Enum)tagger, (Enum)tagger3));
        ALBUMARTIST = new VorbisCommentFieldKey("ALBUMARTIST", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        ALBUMARTISTSORT = new VorbisCommentFieldKey("ALBUMARTISTSORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        ALBUMARTISTS = new VorbisCommentFieldKey("ALBUM_ARTISTS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        ALBUMARTISTSSORT = new VorbisCommentFieldKey("ALBUM_ARTISTS_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        ALBUMARTIST_JRIVER = new VorbisCommentFieldKey("ALBUM ARTIST", (EnumSet<Tagger>)EnumSet.of((Enum)Tagger.JRIVER));
        ALBUMSORT = new VorbisCommentFieldKey("ALBUMSORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        Tagger tagger4 = Tagger.MEDIA_MONKEY;
        ALBUM_ARTIST = new VorbisCommentFieldKey("ALBUM_ARTIST", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4));
        ARRANGER = new VorbisCommentFieldKey("ARRANGER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger));
        ARRANGER_SORT = new VorbisCommentFieldKey("ARRANGER_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        ARTIST = new VorbisCommentFieldKey("ARTIST", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2, (Enum)tagger, (Enum)tagger3));
        ARTISTS = new VorbisCommentFieldKey("ARTISTS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        ARTISTSORT = new VorbisCommentFieldKey("ARTISTSORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        ARTISTS_SORT = new VorbisCommentFieldKey("ARTISTS_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        ASIN = new VorbisCommentFieldKey("ASIN", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        BARCODE = new VorbisCommentFieldKey("BARCODE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        BPM = new VorbisCommentFieldKey("BPM", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        CATALOGNUMBER = new VorbisCommentFieldKey("CATALOGNUMBER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        CHOIR = new VorbisCommentFieldKey("CHOIR", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        CHOIR_SORT = new VorbisCommentFieldKey("CHOIR_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        CLASSICAL_CATALOG = new VorbisCommentFieldKey("CLASSICAL_CATALOG", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        CLASSICAL_NICKNAME = new VorbisCommentFieldKey("CLASSICAL_NICKNAME", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        COMMENT = new VorbisCommentFieldKey("COMMENT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger));
        COMPILATION = new VorbisCommentFieldKey("COMPILATION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        COMPOSER = new VorbisCommentFieldKey("COMPOSER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        COMPOSERSORT = new VorbisCommentFieldKey("COMPOSERSORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        CONDUCTOR = new VorbisCommentFieldKey("CONDUCTOR", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        CONDUCTOR_SORT = new VorbisCommentFieldKey("CONDUCTOR_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        CONTACT = new VorbisCommentFieldKey("CONTACT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2));
        COPYRIGHT = new VorbisCommentFieldKey("COPYRIGHT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2, (Enum)tagger, (Enum)tagger3));
        COUNTRY = new VorbisCommentFieldKey("COUNTRY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger));
        COVERART = new VorbisCommentFieldKey("COVERART", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        COVERARTMIME = new VorbisCommentFieldKey("COVERARTMIME", (EnumSet<Tagger>)EnumSet.of((Enum)tagger3));
        CUSTOM1 = new VorbisCommentFieldKey("CUSTOM1", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4));
        CUSTOM2 = new VorbisCommentFieldKey("CUSTOM2", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4));
        CUSTOM3 = new VorbisCommentFieldKey("CUSTOM3", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4));
        CUSTOM4 = new VorbisCommentFieldKey("CUSTOM4", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4));
        CUSTOM5 = new VorbisCommentFieldKey("CUSTOM5", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4));
        DATE = new VorbisCommentFieldKey("DATE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2, (Enum)tagger, (Enum)tagger3));
        DESCRIPTION = new VorbisCommentFieldKey("DESCRIPTION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2));
        DISCNUMBER = new VorbisCommentFieldKey("DISCNUMBER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        DISCSUBTITLE = new VorbisCommentFieldKey("DISCSUBTITLE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger, (Enum)tagger3));
        DISCTOTAL = new VorbisCommentFieldKey("DISCTOTAL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger2, (Enum)tagger));
        DJMIXER = new VorbisCommentFieldKey("DJMIXER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger));
        Tagger tagger5 = Tagger.PICARD;
        ENCODEDBY = new VorbisCommentFieldKey("ENCODEDBY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5));
        ENCODER = new VorbisCommentFieldKey("ENCODER");
        ENGINEER = new VorbisCommentFieldKey("ENGINEER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5));
        Tagger tagger6 = Tagger.JAIKOZ;
        ENSEMBLE = new VorbisCommentFieldKey("ENSEMBLE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger4, (Enum)tagger6));
        ENSEMBLE_SORT = new VorbisCommentFieldKey("ENSEMBLE_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        FBPM = new VorbisCommentFieldKey("FBPM", (EnumSet<Tagger>)EnumSet.of((Enum)Tagger.BEATUNES));
        Tagger tagger7 = Tagger.XIPH;
        GENRE = new VorbisCommentFieldKey("GENRE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger7, (Enum)tagger5, (Enum)tagger6));
        GROUP = new VorbisCommentFieldKey("GROUP", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        GROUPING = new VorbisCommentFieldKey("GROUPING", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        INSTRUMENT = new VorbisCommentFieldKey("INSTRUMENT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        INVOLVED_PERSON = new VorbisCommentFieldKey("INVOLVED_PERSON", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        ISRC = new VorbisCommentFieldKey("ISRC", (EnumSet<Tagger>)EnumSet.of((Enum)tagger7, (Enum)tagger5, (Enum)tagger6));
        IS_CLASSICAL = new VorbisCommentFieldKey("IS_CLASSICAL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        IS_SOUNDTRACK = new VorbisCommentFieldKey("IS_SOUNDTRACK", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        KEY = new VorbisCommentFieldKey("KEY");
        LABEL = new VorbisCommentFieldKey("LABEL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        LANGUAGE = new VorbisCommentFieldKey("LANGUAGE");
        LICENSE = new VorbisCommentFieldKey("LICENSE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger7));
        LOCATION = new VorbisCommentFieldKey("LOCATION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger7));
        LYRICIST = new VorbisCommentFieldKey("LYRICIST", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        LYRICS = new VorbisCommentFieldKey("LYRICS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MEDIA = new VorbisCommentFieldKey("MEDIA", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        METADATA_BLOCK_PICTURE = new VorbisCommentFieldKey("METADATA_BLOCK_PICTURE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger7));
        MIXER = new VorbisCommentFieldKey("MIXER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5));
        MOOD = new VorbisCommentFieldKey("MOOD", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MOOD_ACOUSTIC = new VorbisCommentFieldKey("MOOD_ACOUSTIC", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_AGGRESSIVE = new VorbisCommentFieldKey("MOOD_AGGRESSIVE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_AROUSAL = new VorbisCommentFieldKey("MOOD_AROUSAL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_DANCEABILITY = new VorbisCommentFieldKey("MOOD_DANCEABILITY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_ELECTRONIC = new VorbisCommentFieldKey("MOOD_ELECTRONIC", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_HAPPY = new VorbisCommentFieldKey("MOOD_HAPPY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_INSTRUMENTAL = new VorbisCommentFieldKey("MOOD_INSTRUMENTAL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_PARTY = new VorbisCommentFieldKey("MOOD_PARTY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_RELAXED = new VorbisCommentFieldKey("MOOD_RELAXED", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_SAD = new VorbisCommentFieldKey("MOOD_SAD", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOOD_VALENCE = new VorbisCommentFieldKey("MOOD_VALENCE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOVEMENT = new VorbisCommentFieldKey("MOVEMENT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOVEMENT_NO = new VorbisCommentFieldKey("MOVEMENT_NO", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MOVEMENT_TOTAL = new VorbisCommentFieldKey("MOVEMENT_TOTAL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MUSICBRAINZ_ALBUMARTISTID = new VorbisCommentFieldKey("MUSICBRAINZ_ALBUMARTISTID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_ALBUMID = new VorbisCommentFieldKey("MUSICBRAINZ_ALBUMID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_ALBUMSTATUS = new VorbisCommentFieldKey("MUSICBRAINZ_ALBUMSTATUS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_ALBUMTYPE = new VorbisCommentFieldKey("MUSICBRAINZ_ALBUMTYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_ARTISTID = new VorbisCommentFieldKey("MUSICBRAINZ_ARTISTID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_DISCID = new VorbisCommentFieldKey("MUSICBRAINZ_DISCID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_ORIGINAL_ALBUMID = new VorbisCommentFieldKey("MUSICBRAINZ_ORIGINALALBUMID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        MUSICBRAINZ_RELEASEGROUPID = new VorbisCommentFieldKey("MUSICBRAINZ_RELEASEGROUPID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger5, (Enum)tagger6));
        MUSICBRAINZ_RELEASETRACKID = new VorbisCommentFieldKey("MUSICBRAINZ_RELEASETRACKID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        Tagger tagger8 = Tagger.PICARD;
        MUSICBRAINZ_TRACKID = new VorbisCommentFieldKey("MUSICBRAINZ_TRACKID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger8, (Enum)tagger6));
        MUSICBRAINZ_WORK = new VorbisCommentFieldKey("MUSICBRAINZ_WORK", (EnumSet<Tagger>)EnumSet.of((Enum)tagger6));
        Tagger tagger9 = Tagger.JAIKOZ;
        MUSICBRAINZ_WORKID = new VorbisCommentFieldKey("MUSICBRAINZ_WORKID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger8, (Enum)tagger9));
        MUSICBRAINZ_WORK_COMPOSITION = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_COMPOSITION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_COMPOSITION_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_COMPOSITION_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL1 = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL1", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL1_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL1_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL1_TYPE = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL1_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL2 = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL2", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL2_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL2_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL2_TYPE = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL2_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL3 = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL3", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL3_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL3_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL3_TYPE = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL3_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL4_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL4_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL4 = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL4", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL4_TYPE = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL4_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL5 = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL5", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL5_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL5_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL5_TYPE = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL5_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL6 = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL6", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL6_ID = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL6_ID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICBRAINZ_WORK_PART_LEVEL6_TYPE = new VorbisCommentFieldKey("MUSICBRAINZ_WORK_PART_LEVEL6_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICIAN = new VorbisCommentFieldKey("MUSICIAN", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        MUSICIP_PUID = new VorbisCommentFieldKey("MUSICIP_PUID", (EnumSet<Tagger>)EnumSet.of((Enum)tagger8, (Enum)tagger9));
        Tagger tagger10 = Tagger.MEDIA_MONKEY;
        OCCASION = new VorbisCommentFieldKey("OCCASION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger10));
        OPUS = new VorbisCommentFieldKey("OPUS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        ORCHESTRA = new VorbisCommentFieldKey("ORCHESTRA", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        ORCHESTRA_SORT = new VorbisCommentFieldKey("ORCHESTRA_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        Tagger tagger11 = Tagger.XIPH;
        ORGANIZATION = new VorbisCommentFieldKey("ORGANIZATION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11));
        ORIGINAL_ALBUM = new VorbisCommentFieldKey("ORIGINAL ALBUM", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9, (Enum)tagger10));
        ORIGINAL_ARTIST = new VorbisCommentFieldKey("ORIGINAL ARTIST", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9, (Enum)tagger10));
        ORIGINAL_LYRICIST = new VorbisCommentFieldKey("ORIGINAL LYRICIST", (EnumSet<Tagger>)EnumSet.of((Enum)tagger10));
        ORIGINAL_YEAR = new VorbisCommentFieldKey("ORIGINAL YEAR", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9, (Enum)tagger10));
        PART = new VorbisCommentFieldKey("PART", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        PART_NUMBER = new VorbisCommentFieldKey("PARTNUMBER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11));
        PART_TYPE = new VorbisCommentFieldKey("PART_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        PERFORMER = new VorbisCommentFieldKey("PERFORMER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11, (Enum)tagger8));
        PERFORMER_NAME = new VorbisCommentFieldKey("PERFORMER_NAME", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        PERFORMER_NAME_SORT = new VorbisCommentFieldKey("PERFORMER_NAME_SORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        PERIOD = new VorbisCommentFieldKey("PERIOD", (EnumSet<Tagger>)EnumSet.of((Enum)Tagger.MUSICHI));
        PRODUCER = new VorbisCommentFieldKey("PRODUCER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger8));
        PRODUCTNUMBER = new VorbisCommentFieldKey("PRODUCTNUMBER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11));
        QUALITY = new VorbisCommentFieldKey("QUALITY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger10));
        RANKING = new VorbisCommentFieldKey("RANKING", (EnumSet<Tagger>)EnumSet.of((Enum)tagger9));
        RATING = new VorbisCommentFieldKey("RATING", (EnumSet<Tagger>)EnumSet.of((Enum)tagger10));
        Tagger tagger12 = Tagger.PICARD;
        RELEASECOUNTRY = new VorbisCommentFieldKey("RELEASECOUNTRY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger12, (Enum)tagger9));
        REMIXER = new VorbisCommentFieldKey("REMIXER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger12, (Enum)tagger9));
        Tagger tagger13 = Tagger.JAIKOZ;
        SCRIPT = new VorbisCommentFieldKey("SCRIPT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        SINGLE_DISC_TRACK_NO = new VorbisCommentFieldKey("SINGLE_DISC_TRACK_NO", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        SOURCEMEDIA = new VorbisCommentFieldKey("SOURCEMEDIA", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11));
        SUBTITLE = new VorbisCommentFieldKey("SUBTITLE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger12, (Enum)tagger13));
        TAGS = new VorbisCommentFieldKey("TAGS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        TEMPO = new VorbisCommentFieldKey("TEMPO", (EnumSet<Tagger>)EnumSet.of((Enum)tagger10));
        TIMBRE = new VorbisCommentFieldKey("TIMBRE_BRIGHTNESS", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        TITLE = new VorbisCommentFieldKey("TITLE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11, (Enum)tagger12, (Enum)tagger13));
        TITLE_MOVEMENT = new VorbisCommentFieldKey("TITLE_MOVEMENT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        TITLESORT = new VorbisCommentFieldKey("TITLESORT", (EnumSet<Tagger>)EnumSet.of((Enum)tagger12, (Enum)tagger13));
        TONALITY = new VorbisCommentFieldKey("TONALITY", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        TRACKNUMBER = new VorbisCommentFieldKey("TRACKNUMBER", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11, (Enum)tagger12, (Enum)tagger13));
        TRACKTOTAL = new VorbisCommentFieldKey("TRACKTOTAL", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11, (Enum)tagger12));
        URL_DISCOGS_ARTIST_SITE = new VorbisCommentFieldKey("URL_DISCOGS_ARTIST_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        URL_DISCOGS_RELEASE_SITE = new VorbisCommentFieldKey("URL_DISCOGS_RELEASE_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        URL_LYRICS_SITE = new VorbisCommentFieldKey("URL_LYRICS_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        URL_OFFICIAL_ARTIST_SITE = new VorbisCommentFieldKey("URL_OFFICIAL_ARTIST_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        URL_OFFICIAL_RELEASE_SITE = new VorbisCommentFieldKey("URL_OFFICIAL_RELEASE_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        URL_WIKIPEDIA_ARTIST_SITE = new VorbisCommentFieldKey("URL_WIKIPEDIA_ARTIST_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        URL_WIKIPEDIA_RELEASE_SITE = new VorbisCommentFieldKey("URL_WIKIPEDIA_RELEASE_SITE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        VENDOR = new VorbisCommentFieldKey("VENDOR");
        VERSION = new VorbisCommentFieldKey("VERSION", (EnumSet<Tagger>)EnumSet.of((Enum)tagger11));
        WORK = new VorbisCommentFieldKey("WORK", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        WORK_TYPE = new VorbisCommentFieldKey("WORK_TYPE", (EnumSet<Tagger>)EnumSet.of((Enum)tagger13));
        VorbisCommentFieldKey[] arrvorbisCommentFieldKey = new VorbisCommentFieldKey[]{ACOUSTID_FINGERPRINT, ACOUSTID_ID, ALBUM, ALBUMARTIST, ALBUMARTISTSORT, ALBUMARTISTS, ALBUMARTISTSSORT, ALBUMARTIST_JRIVER, ALBUMSORT, ALBUM_ARTIST, ARRANGER, ARRANGER_SORT, ARTIST, ARTISTS, ARTISTSORT, ARTISTS_SORT, ASIN, BARCODE, BPM, CATALOGNUMBER, CHOIR, CHOIR_SORT, CLASSICAL_CATALOG, CLASSICAL_NICKNAME, COMMENT, COMPILATION, COMPOSER, COMPOSERSORT, CONDUCTOR, CONDUCTOR_SORT, CONTACT, COPYRIGHT, COUNTRY, COVERART, COVERARTMIME, CUSTOM1, CUSTOM2, CUSTOM3, CUSTOM4, CUSTOM5, DATE, DESCRIPTION, DISCNUMBER, DISCSUBTITLE, DISCTOTAL, DJMIXER, ENCODEDBY, ENCODER, ENGINEER, ENSEMBLE, ENSEMBLE_SORT, FBPM, GENRE, GROUP, GROUPING, INSTRUMENT, INVOLVED_PERSON, ISRC, IS_CLASSICAL, IS_SOUNDTRACK, KEY, LABEL, LANGUAGE, LICENSE, LOCATION, LYRICIST, LYRICS, MEDIA, METADATA_BLOCK_PICTURE, MIXER, MOOD, MOOD_ACOUSTIC, MOOD_AGGRESSIVE, MOOD_AROUSAL, MOOD_DANCEABILITY, MOOD_ELECTRONIC, MOOD_HAPPY, MOOD_INSTRUMENTAL, MOOD_PARTY, MOOD_RELAXED, MOOD_SAD, MOOD_VALENCE, MOVEMENT, MOVEMENT_NO, MOVEMENT_TOTAL, MUSICBRAINZ_ALBUMARTISTID, MUSICBRAINZ_ALBUMID, MUSICBRAINZ_ALBUMSTATUS, MUSICBRAINZ_ALBUMTYPE, MUSICBRAINZ_ARTISTID, MUSICBRAINZ_DISCID, MUSICBRAINZ_ORIGINAL_ALBUMID, MUSICBRAINZ_RELEASEGROUPID, MUSICBRAINZ_RELEASETRACKID, MUSICBRAINZ_TRACKID, MUSICBRAINZ_WORK, MUSICBRAINZ_WORKID, MUSICBRAINZ_WORK_COMPOSITION, MUSICBRAINZ_WORK_COMPOSITION_ID, MUSICBRAINZ_WORK_PART_LEVEL1, MUSICBRAINZ_WORK_PART_LEVEL1_ID, MUSICBRAINZ_WORK_PART_LEVEL1_TYPE, MUSICBRAINZ_WORK_PART_LEVEL2, MUSICBRAINZ_WORK_PART_LEVEL2_ID, MUSICBRAINZ_WORK_PART_LEVEL2_TYPE, MUSICBRAINZ_WORK_PART_LEVEL3, MUSICBRAINZ_WORK_PART_LEVEL3_ID, MUSICBRAINZ_WORK_PART_LEVEL3_TYPE, MUSICBRAINZ_WORK_PART_LEVEL4_ID, MUSICBRAINZ_WORK_PART_LEVEL4, MUSICBRAINZ_WORK_PART_LEVEL4_TYPE, MUSICBRAINZ_WORK_PART_LEVEL5, MUSICBRAINZ_WORK_PART_LEVEL5_ID, MUSICBRAINZ_WORK_PART_LEVEL5_TYPE, MUSICBRAINZ_WORK_PART_LEVEL6, MUSICBRAINZ_WORK_PART_LEVEL6_ID, MUSICBRAINZ_WORK_PART_LEVEL6_TYPE, MUSICIAN, MUSICIP_PUID, OCCASION, OPUS, ORCHESTRA, ORCHESTRA_SORT, ORGANIZATION, ORIGINAL_ALBUM, ORIGINAL_ARTIST, ORIGINAL_LYRICIST, ORIGINAL_YEAR, PART, PART_NUMBER, PART_TYPE, PERFORMER, PERFORMER_NAME, PERFORMER_NAME_SORT, PERIOD, PRODUCER, PRODUCTNUMBER, QUALITY, RANKING, RATING, RELEASECOUNTRY, REMIXER, SCRIPT, SINGLE_DISC_TRACK_NO, SOURCEMEDIA, SUBTITLE, TAGS, TEMPO, TIMBRE, TITLE, TITLE_MOVEMENT, TITLESORT, TONALITY, TRACKNUMBER, TRACKTOTAL, URL_DISCOGS_ARTIST_SITE, URL_DISCOGS_RELEASE_SITE, URL_LYRICS_SITE, URL_OFFICIAL_ARTIST_SITE, URL_OFFICIAL_RELEASE_SITE, URL_WIKIPEDIA_ARTIST_SITE, URL_WIKIPEDIA_RELEASE_SITE, VENDOR, VERSION, WORK, WORK_TYPE};
        $VALUES = arrvorbisCommentFieldKey;
    }

    private VorbisCommentFieldKey(String string3) {
        this.fieldName = string3;
    }

    private VorbisCommentFieldKey(String string3, EnumSet<Tagger> enumSet) {
        this.fieldName = string3;
        this.taggers = enumSet;
    }

    public static VorbisCommentFieldKey valueOf(String string2) {
        return (VorbisCommentFieldKey)Enum.valueOf(VorbisCommentFieldKey.class, (String)string2);
    }

    public static VorbisCommentFieldKey[] values() {
        return (VorbisCommentFieldKey[])$VALUES.clone();
    }

    public String getFieldName() {
        return this.fieldName;
    }

    public EnumSet<Tagger> getTaggers() {
        return this.taggers;
    }
}

